{"version":3,"sources":["views/pages/authentication/register-multi-steps/steps/Verify.js","views/pages/authentication/register-multi-steps/steps/PersonalInfo.js","views/pages/authentication/register-multi-steps/steps/AccountDetails.js","views/pages/authentication/register-multi-steps/index.js","@core/components/input-password-toggle/index.js","@core/components/wizard/index.js","../../../src/js/polyfill.js","../../../src/js/util.js","../../../src/js/listeners.js","../../../src/js/index.js","assets/images/pages/create-account.svg"],"names":["Verify","stepper","useForm","defaultValues","cardNumber","control","setError","handleSubmit","errors","formState","className","onSubmit","data","length","next","type","sm","for","name","render","field","id","placeholder","classnames","color","outline","onClick","previous","size","businessName","businessEmail","contactNo","businessType","businessEntity","addressLine1","addressLine2","stateId","city","zipCode","country","PersonalInfo","register","Object","values","every","key","message","md","invalid","required","address","email","username","password","confirmPassword","AccountDetails","SignupSchema","yup","shape","oneOf","resolver","yupResolver","label","htmlFor","disabled","RegisterMultiSteps","ref","useRef","useState","setStepper","steps","title","subtitle","icon","content","source","require","default","to","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","src","alt","instance","el","headerClassName","contentWrapperClassName","InputPasswordToggle","forwardRef","props","hideIcon","showIcon","visible","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","renderIcon","defaultProps","Wizard","options","separator","contentClassName","activeIndex","setActiveIndex","useEffect","Stepper","current","addEventListener","event","detail","indexStep","map","step","index","crossed","active","matches","window","closest","element","WinEvent","createCustomEvent","polyfill","document","params","e","Boolean","originPreventDefault","evt","bubbles","cancelable","this","get","MILLISECONDS_MULTIPLIER","ClassName","ACTIVE","LINEAR","BLOCK","NONE","FADE","VERTICAL","transitionEndEvent","customProperty","show","stepperNode","done","showEvent","from","activeStep","activeContent","showStep","showContent","stepList","trigger","currentTrigger","contentList","toIndex","shownEvent","complete","duration","getTransitionDurationFromElement","emulateTransitionEnd","transitionDuration","parseFloat","called","emulatedDuration","listener","detectAnimation","buildClickStepLinearListener","buildClickStepNonLinearListener","stepIndex","DEFAULT_OPTIONS","linear","animation","selectors","_options","_element","_currentIndex","_stepsContents","classList","add","_steps","slice","call","querySelectorAll","filter","_setLinkListeners","value","writable","forEach","nextStep","previousStep","tempIndex","stepNumber","reset","destroy","undefined","_clickStepLinearListener","_clickStepNonLinearListener"],"mappings":"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","file":"static/js/47.4fb2b386.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport Cleave from 'cleave.js/react'\nimport { useForm, Controller } from 'react-hook-form'\nimport { ChevronLeft, ChevronRight } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Form, Label, Input, Row, Col, Button, InputGroup, InputGroupText, FormFeedback } from 'reactstrap'\n\n// ** Card Images\n// import jcbCC from '@src/assets/images/icons/payments/jcb-cc.png'\n// import amexCC from '@src/assets/images/icons/payments/amex-cc.png'\n// import uatpCC from '@src/assets/images/icons/payments/uatp-cc.png'\n// import visaCC from '@src/assets/images/icons/payments/visa-cc.png'\n// import dinersCC from '@src/assets/images/icons/payments/diners-cc.png'\n// import maestroCC from '@src/assets/images/icons/payments/maestro-cc.png'\n// import discoverCC from '@src/assets/images/icons/payments/discover-cc.png'\n// import mastercardCC from '@src/assets/images/icons/payments/mastercard-cc.png'\n\n// const cardsObj = {\n//   jcb: jcbCC,\n//   uatp: uatpCC,\n//   visa: visaCC,\n//   amex: amexCC,\n//   diners: dinersCC,\n//   maestro: maestroCC,\n//   discover: discoverCC,\n//   mastercard: mastercardCC\n// }\n\nconst Verify = ({ stepper }) => {\n  // ** States\n\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues: { cardNumber: '' }\n  })\n\n  const onSubmit = data => {\n    if (data.cardNumber && data.cardNumber.length > 0) {\n      stepper.next()\n    } else {\n      setError('cardNumber', {\n        type: 'manual'\n      })\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='content-header mb-2'>\n        <h2 className='fw-bolder mb-75'>Account Verification</h2>\n        {/* <span>Select plan as per your requirement.</span> */}\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        \n        <Row className='gx-2 mb-1'>\n          <Col sm={12} className='mb-1'>\n            <Label className='form-label' for='credit-card'>\n              Verification Code\n            </Label>\n            <InputGroup className='input-group-merge'>\n              <Controller\n                name='cardNumber'\n                control={control}\n                render={({ field }) => (\n                  <Cleave\n                    {...field}\n                    id='credit-card'\n                    placeholder='1356'\n                    className={classnames('form-control', { 'is-invalid': errors.cardNumber })}\n                  />\n                )}\n              />\n            </InputGroup>\n            {errors.cardNumber && <FormFeedback className='d-block'>Please enter a valid card number</FormFeedback>}\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between mt-2'>\n          <Button color='secondary' className='btn-prev' outline onClick={() => stepper.previous()}>\n            <ChevronLeft size={14} className='align-middle me-sm-25 me-0'></ChevronLeft>\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n          </Button>\n          <Button type='submit' color='primary' className='btn-next'>\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\n            <ChevronRight size={14} className='align-middle ms-sm-25 ms-0'></ChevronRight>\n          </Button>\n        </div>\n      </Form>\n    </Fragment>\n  )\n}\n\nexport default Verify\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport { useForm, Controller } from 'react-hook-form'\nimport { ChevronLeft, Check } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Form, Label, Input, Row, Col, Button, FormFeedback } from 'reactstrap'\n\nconst defaultValues = {\n  businessName: '',\n  businessEmail: '',\n  contactNo: '',\n  businessType: '',\n  businessEntity: '',\n  addressLine1: '',\n  addressLine2: '',\n  stateId : '',\n  city: '',\n  zipCode: '',\n  country: ''\n}\n\nconst PersonalInfo = ({ stepper }) => {\n  // ** Hooks\n  const {\n    control,\n    setError,\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues\n  })\n\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      stepper.next()\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual',\n            message: `Please enter a valid ${key}`\n          })\n        }\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='content-header mb-2'>\n        <h2 className='fw-bolder mb-75'>Organization Information</h2>\n        <span>Enter Your Organization Details.</span>\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Row>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='businessName'>\n              Business Name\n            </Label>\n            <Input placeholder='Turia' invalid={errors.businessName && true}  {...register(`businessName`, { required: true })} />\n         \n            {errors.businessName && <FormFeedback>{errors.businessName.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='businessEmail'>\n              Business E-mail\n            </Label>\n            <Input type='email' id='email' name='email' placeholder='example@gmail.com' invalid={errors.businessEmail && true}  {...register(`businessEmail`, { required: true })}  />\n            {errors.businessEmail && <FormFeedback>{errors.businessEmail.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='contactNo'>\n              Contact No\n            </Label>\n            <Input type='number' id='contactNo' name='contactNo' placeholder='(472) 765-3654' invalid={errors.contactNo && true}  {...register(`contactNo`, { required: true })} />\n            {errors.contactNo  && <FormFeedback>{errors.contactNo.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='businessType' >\n              Business Type\n            </Label>\n            <Input id='businessType' name='businessType' invalid={errors.businessType && true}  {...register(`businessType`, { required: true })} />\n            {errors.businessType  && <FormFeedback>{errors.businessType.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='pincode'>\n              Business Entity\n            </Label>\n            <Input type='number' id='pincode' name='pincode' placeholder='657482' />\n          </Col>\n          <Col sm='12' className='mb-1'>\n            <Label className='form-label' for='address'>\n              Address\n            </Label>\n            <Controller\n              id='address'\n              name='address'\n              control={control}\n              render={({ field }) => <Input invalid={errors.address && true} {...field} />}\n            />\n            {errors.address && <FormFeedback>{errors.address.message}</FormFeedback>}\n          </Col>\n          <Col sm={12} className='mb-1'>\n            <Label className='form-label' for='area-sector'>\n              Area, Street, Sector, Village\n            </Label>\n            <Input id='area-sector' name='area-sector' placeholder='Area, Street, Sector, Village' />\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='state'>\n              State\n            </Label>\n            <Input id='state' name='state' placeholder='State' />\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='postal-code'>\n              Postal Code\n            </Label>\n            <Input type='number' id='postal-code' name='postal-code' placeholder='000 000' />\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='town-city'>\n              Town/City\n            </Label>\n            <Input id='town-city' name='town-city' placeholder='Town/City' />\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='country'>\n              Country\n            </Label>\n            <Input type='number' id='country' name='country' placeholder='United Kingdom' />\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between mt-2'>\n          <Button color='secondary' className='btn-prev' outline onClick={() => stepper.previous()}>\n            <ChevronLeft size={14} className='align-middle me-sm-25 me-0'></ChevronLeft>\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n          </Button>\n          <Button type='submit' color='success' className='btn-next'>\n            <span className='align-middle d-sm-inline-block d-none'>Submit</span>\n            <Check size={14} className='align-middle ms-sm-25 ms-0'></Check>\n          </Button>\n        </div>\n      </Form>\n    </Fragment>\n  )\n}\n\nexport default PersonalInfo\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { ChevronLeft, ChevronRight } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Form, Label, Input, Row, Col, Button, FormFeedback } from 'reactstrap'\n\n// ** Custom Components\nimport InputPasswordToggle from '@components/input-password-toggle'\n\nconst defaultValues = {\n  email: '',\n  username: '',\n  password: '',\n  confirmPassword: ''\n}\n\nconst AccountDetails = ({ stepper }) => {\n  const SignupSchema = yup.object().shape({\n    username: yup.string().required(),\n    email: yup.string().email().required(),\n    password: yup.string().required(),\n    confirmPassword: yup\n      .string()\n      .required()\n      .oneOf([yup.ref(`password`), null], 'Passwords must match')\n  })\n\n  // ** Hooks\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues,\n    resolver: yupResolver(SignupSchema)\n  })\n\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      stepper.next()\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='content-header mb-2'>\n        <h2 className='fw-bolder mb-75'>Account Information</h2>\n        <span>Enter your username password details</span>\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Row>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='username'>\n              Username\n            </Label>\n            <Controller\n              id='username'\n              name='username'\n              control={control}\n              render={({ field }) => <Input placeholder='johndoe' invalid={errors.username && true} {...field} />}\n            />\n            {errors.username && <FormFeedback>{errors.username.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for={`email`}>\n              Email\n            </Label>\n            <Controller\n              control={control}\n              id='email'\n              name='email'\n              render={({ field }) => (\n                <Input type='email' placeholder='john.doe@email.com' invalid={errors.email && true} {...field} />\n              )}\n            />\n            {errors.email && <FormFeedback>{errors.email.message}</FormFeedback>}\n          </Col>\n        </Row>\n        <Row>\n          <div className='form-password-toggle col-md-6 mb-1'>\n            <Controller\n              id='password'\n              name='password'\n              control={control}\n              render={({ field }) => (\n                <InputPasswordToggle\n                  label='Password'\n                  htmlFor='password'\n                  className='input-group-merge'\n                  invalid={errors.password && true}\n                  {...field}\n                />\n              )}\n            />\n            {errors.password && <FormFeedback>{errors.password.message}</FormFeedback>}\n          </div>\n          <div className='form-password-toggle col-md-6 mb-1'>\n            <Controller\n              control={control}\n              id='confirmPassword'\n              name='confirmPassword'\n              render={({ field }) => (\n                <InputPasswordToggle\n                  label='Confirm Password'\n                  htmlFor='password'\n                  className='input-group-merge'\n                  invalid={errors.confirmPassword && true}\n                  {...field}\n                />\n              )}\n            />\n            {errors.confirmPassword && <FormFeedback>{errors.confirmPassword.message}</FormFeedback>}\n          </div>\n        </Row>\n        <Row>\n          <Col sm={12} className='mb-1'>\n            <div className='form-check form-check-inline'>\n              <Input type='checkbox' id='remember-me' />\n              <Label for='remember-me' className='form-check-label'>\n                Remember Me\n              </Label>\n            </div>\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between mt-2'>\n          <Button color='secondary' className='btn-prev' outline disabled>\n            <ChevronLeft size={14} className='align-middle me-sm-25 me-0'></ChevronLeft>\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n          </Button>\n          <Button type='submit' color='primary' className='btn-next'>\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\n            <ChevronRight size={14} className='align-middle ms-sm-25 ms-0'></ChevronRight>\n          </Button>\n        </div>\n      </Form>\n    </Fragment>\n  )\n}\n\nexport default AccountDetails\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useRef, useState } from 'react'\n\n// ** Custom Components\nimport Wizard from '@components/wizard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Third Party Components\nimport { Home, User, CheckCircle } from 'react-feather'\n\n// ** Steps\nimport Verify from './steps/Verify'\nimport PersonalInfo from './steps/PersonalInfo'\nimport AccountDetails from './steps/AccountDetails'\n\n// ** Styles\nimport '@styles/react/pages/page-authentication.scss'\n\nconst RegisterMultiSteps = () => {\n  // ** Ref\n  const ref = useRef(null)\n\n  // ** State\n  const [stepper, setStepper] = useState(null)\n\n  const steps = [\n    {\n      id: 'account-details',\n      title: 'Account',\n      subtitle: 'Enter username',\n      icon: <User size={18} />,\n      content: <AccountDetails stepper={stepper} />\n    },\n    {\n      title: 'Verify',\n      id: 'account-verification',\n      subtitle: 'Account Verification',\n      icon: <CheckCircle size={18} />,\n      content: <Verify stepper={stepper} />\n    },\n    {\n      id: 'create-organization',\n      title: 'Organization',\n      subtitle: 'Create Organization',\n      icon: <Home size={18} />,\n      content: <PersonalInfo stepper={stepper} />\n    }\n  ]\n\n  const source = require('@src/assets/images/pages/create-account.svg').default\n\n  return (\n    <div className='auth-wrapper auth-cover'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/'>\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\n            <defs>\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                <stop stopColor='#000000' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n            </defs>\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\n                  <path\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                    id='Path'\n                    className='text-primary'\n                    style={{ fill: 'currentColor' }}\n                  ></path>\n                  <path\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                    id='Path'\n                    fill='url(#linearGradient-1)'\n                    opacity='0.2'\n                  ></path>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.049999997'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                  ></polygon>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.099999994'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                  ></polygon>\n                  <polygon\n                    id='Path-3'\n                    fill='url(#linearGradient-2)'\n                    opacity='0.099999994'\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                  ></polygon>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2 className='brand-text text-primary ms-1'>Turia</h2>\n        </Link>\n        <Col lg='3' className='d-none d-lg-flex align-items-center p-0'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center'>\n            <img className='img-fluid w-100' src={source} alt='Login Cover' />\n          </div>\n        </Col>\n        <Col lg='9' className='d-flex align-items-center auth-bg px-2 px-sm-3 px-lg-5 pt-3'>\n          <div className='width-700 mx-auto'>\n            <Wizard\n              ref={ref}\n              steps={steps}\n              instance={el => setStepper(el)}\n              headerClassName='px-0'\n              contentWrapperClassName='px-0 mt-4'\n              className='register-multi-steps-wizard shadow-none'\n            />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default RegisterMultiSteps\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","// ** React Imports\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\n\n// ** Third Party Components\nimport Stepper from 'bs-stepper'\nimport classnames from 'classnames'\nimport { PropTypes } from 'prop-types'\nimport { ChevronRight } from 'react-feather'\n\n// ** Styles\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\n\nconst Wizard = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    type,\n    steps,\n    options,\n    instance,\n    separator,\n    className,\n    headerClassName,\n    contentClassName,\n    contentWrapperClassName\n  } = props\n\n  // ** State\n  const [activeIndex, setActiveIndex] = useState(0)\n\n  // ** Vars\n  let stepper = null\n\n  // ** Step change listener on mount\n  useEffect(() => {\n    stepper = new Stepper(ref.current, options)\n\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\n      setActiveIndex(event.detail.indexStep)\n    })\n\n    if (instance) {\n      instance(stepper)\n    }\n  }, [])\n\n  // ** Renders Wizard Header\n  const renderHeader = () => {\n    return steps.map((step, index) => {\n      return (\n        <Fragment key={step.id}>\n          {index !== 0 && index !== steps.length ? <div className='line'>{separator}</div> : null}\n          <div\n            className={classnames('step', {\n              crossed: activeIndex > index,\n              active: index === activeIndex\n            })}\n            data-target={`#${step.id}`}\n          >\n            <button type='button' className='step-trigger'>\n              <span className='bs-stepper-box'>{step.icon ? step.icon : index + 1}</span>\n              <span className='bs-stepper-label'>\n                <span className='bs-stepper-title'>{step.title}</span>\n                {step.subtitle ? <span className='bs-stepper-subtitle'>{step.subtitle}</span> : null}\n              </span>\n            </button>\n          </div>\n        </Fragment>\n      )\n    })\n  }\n\n  // ** Renders Wizard Content\n  const renderContent = () => {\n    return steps.map((step, index) => {\n      return (\n        <div\n          className={classnames('content', {\n            [contentClassName]: contentClassName,\n            'active dstepper-block': activeIndex === index\n          })}\n          id={step.id}\n          key={step.id}\n        >\n          {step.content}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={classnames('bs-stepper', {\n        [className]: className,\n        vertical: type === 'vertical',\n        'vertical wizard-modern': type === 'modern-vertical',\n        'wizard-modern': type === 'modern-horizontal'\n      })}\n    >\n      <div className={classnames('bs-stepper-header', { [headerClassName]: headerClassName })}>{renderHeader()}</div>\n      <div className={classnames('bs-stepper-content', { [contentWrapperClassName]: contentWrapperClassName })}>\n        {renderContent()}\n      </div>\n    </div>\n  )\n})\n\nexport default Wizard\n\n// ** Default Props\nWizard.defaultProps = {\n  options: {},\n  type: 'horizontal',\n  separator: <ChevronRight size={17} />\n}\n\n// ** PropTypes\nWizard.propTypes = {\n  type: PropTypes.string,\n  instance: PropTypes.func,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  separator: PropTypes.element,\n  headerClassName: PropTypes.string,\n  contentClassName: PropTypes.string,\n  contentWrapperClassName: PropTypes.string,\n  steps: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      subtitle: PropTypes.string,\n      icon: PropTypes.any,\n      content: PropTypes.any.isRequired\n    })\n  ).isRequired\n}\n","let matches = window.Element.prototype.matches\nlet closest = (element, selector) => element.closest(selector)\nlet WinEvent = (inType, params) => new window.Event(inType, params)\nlet createCustomEvent = (eventName, params) => {\n  const cEvent = new window.CustomEvent(eventName, params)\n\n  return cEvent\n}\n\n/* istanbul ignore next */\nfunction polyfill () {\n  if (!window.Element.prototype.matches) {\n    matches = window.Element.prototype.msMatchesSelector ||\n      window.Element.prototype.webkitMatchesSelector\n  }\n\n  if (!window.Element.prototype.closest) {\n    closest = (element, selector) => {\n      if (!document.documentElement.contains(element)) {\n        return null\n      }\n\n      do {\n        if (matches.call(element, selector)) {\n          return element\n        }\n\n        element = element.parentElement || element.parentNode\n      } while (element !== null && element.nodeType === 1)\n\n      return null\n    }\n  }\n\n  if (!window.Event || typeof window.Event !== 'function') {\n    WinEvent = (inType, params) => {\n      params = params || {}\n      const e = document.createEvent('Event')\n      e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable))\n      return e\n    }\n  }\n\n  if (typeof window.CustomEvent !== 'function') {\n    const originPreventDefault = window.Event.prototype.preventDefault\n\n    createCustomEvent = (eventName, params) => {\n      const evt = document.createEvent('CustomEvent')\n\n      params = params || { bubbles: false, cancelable: false, detail: null }\n      evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail)\n      evt.preventDefault = function () {\n        if (!this.cancelable) {\n          return\n        }\n\n        originPreventDefault.call(this)\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () { return true }\n        })\n      }\n\n      return evt\n    }\n  }\n}\n\npolyfill()\n\nexport {\n  closest,\n  WinEvent,\n  createCustomEvent\n}\n","import { WinEvent, createCustomEvent } from './polyfill'\n\nconst MILLISECONDS_MULTIPLIER = 1000\n\nconst ClassName = {\n  ACTIVE: 'active',\n  LINEAR: 'linear',\n  BLOCK: 'dstepper-block',\n  NONE: 'dstepper-none',\n  FADE: 'fade',\n  VERTICAL: 'vertical'\n}\n\nconst transitionEndEvent = 'transitionend'\nconst customProperty = 'bsStepper'\n\nconst show = (stepperNode, indexStep, options, done) => {\n  const stepper = stepperNode[customProperty]\n\n  if (stepper._steps[indexStep].classList.contains(ClassName.ACTIVE) || stepper._stepsContents[indexStep].classList.contains(ClassName.ACTIVE)) {\n    return\n  }\n\n  const showEvent = createCustomEvent('show.bs-stepper', {\n    cancelable: true,\n    detail: {\n      from: stepper._currentIndex,\n      to: indexStep,\n      indexStep\n    }\n  })\n  stepperNode.dispatchEvent(showEvent)\n\n  const activeStep = stepper._steps.filter(step => step.classList.contains(ClassName.ACTIVE))\n  const activeContent = stepper._stepsContents.filter(content => content.classList.contains(ClassName.ACTIVE))\n\n  if (showEvent.defaultPrevented) {\n    return\n  }\n\n  if (activeStep.length) {\n    activeStep[0].classList.remove(ClassName.ACTIVE)\n  }\n  if (activeContent.length) {\n    activeContent[0].classList.remove(ClassName.ACTIVE)\n\n    if (!stepperNode.classList.contains(ClassName.VERTICAL) && !stepper.options.animation) {\n      activeContent[0].classList.remove(ClassName.BLOCK)\n    }\n  }\n\n  showStep(stepperNode, stepper._steps[indexStep], stepper._steps, options)\n  showContent(stepperNode, stepper._stepsContents[indexStep], stepper._stepsContents, activeContent, done)\n}\n\nconst showStep = (stepperNode, step, stepList, options) => {\n  stepList.forEach(step => {\n    const trigger = step.querySelector(options.selectors.trigger)\n\n    trigger.setAttribute('aria-selected', 'false')\n    // if stepper is in linear mode, set disabled attribute on the trigger\n    if (stepperNode.classList.contains(ClassName.LINEAR)) {\n      trigger.setAttribute('disabled', 'disabled')\n    }\n  })\n\n  step.classList.add(ClassName.ACTIVE)\n  const currentTrigger = step.querySelector(options.selectors.trigger)\n\n  currentTrigger.setAttribute('aria-selected', 'true')\n  // if stepper is in linear mode, remove disabled attribute on current\n  if (stepperNode.classList.contains(ClassName.LINEAR)) {\n    currentTrigger.removeAttribute('disabled')\n  }\n}\n\nconst showContent = (stepperNode, content, contentList, activeContent, done) => {\n  const stepper = stepperNode[customProperty]\n  const toIndex = contentList.indexOf(content)\n  const shownEvent = createCustomEvent('shown.bs-stepper', {\n    cancelable: true,\n    detail: {\n      from: stepper._currentIndex,\n      to: toIndex,\n      indexStep: toIndex\n    }\n  })\n\n  function complete () {\n    content.classList.add(ClassName.BLOCK)\n    content.removeEventListener(transitionEndEvent, complete)\n    stepperNode.dispatchEvent(shownEvent)\n    done()\n  }\n\n  if (content.classList.contains(ClassName.FADE)) {\n    content.classList.remove(ClassName.NONE)\n    const duration = getTransitionDurationFromElement(content)\n\n    content.addEventListener(transitionEndEvent, complete)\n    if (activeContent.length) {\n      activeContent[0].classList.add(ClassName.NONE)\n    }\n\n    content.classList.add(ClassName.ACTIVE)\n    emulateTransitionEnd(content, duration)\n  } else {\n    content.classList.add(ClassName.ACTIVE)\n    content.classList.add(ClassName.BLOCK)\n    stepperNode.dispatchEvent(shownEvent)\n    done()\n  }\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let transitionDuration = window.getComputedStyle(element).transitionDuration\n  const floatTransitionDuration = parseFloat(transitionDuration)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n\n  return parseFloat(transitionDuration) * MILLISECONDS_MULTIPLIER\n}\n\nconst emulateTransitionEnd = (element, duration) => {\n  let called = false\n  const durationPadding = 5\n  const emulatedDuration = duration + durationPadding\n  function listener () {\n    called = true\n    element.removeEventListener(transitionEndEvent, listener)\n  }\n\n  element.addEventListener(transitionEndEvent, listener)\n  window.setTimeout(() => {\n    if (!called) {\n      element.dispatchEvent(WinEvent(transitionEndEvent))\n    }\n\n    element.removeEventListener(transitionEndEvent, listener)\n  }, emulatedDuration)\n}\n\nconst detectAnimation = (contentList, options) => {\n  if (options.animation) {\n    contentList.forEach(content => {\n      content.classList.add(ClassName.FADE)\n      content.classList.add(ClassName.NONE)\n    })\n  }\n}\n\nexport {\n  show,\n  ClassName,\n  customProperty,\n  detectAnimation\n}\n","import { closest } from './polyfill'\r\nimport { customProperty, show } from './util'\r\n\r\nconst buildClickStepLinearListener = () => function clickStepLinearListener (event) {\r\n  event.preventDefault()\r\n}\r\n\r\nconst buildClickStepNonLinearListener = options => function clickStepNonLinearListener (event) {\r\n  event.preventDefault()\r\n\r\n  const step = closest(event.target, options.selectors.steps)\r\n  const stepperNode = closest(step, options.selectors.stepper)\r\n  const stepper = stepperNode[customProperty]\r\n  const stepIndex = stepper._steps.indexOf(step)\r\n\r\n  show(stepperNode, stepIndex, options, () => {\r\n    stepper._currentIndex = stepIndex\r\n  })\r\n}\r\n\r\nexport {\r\n  buildClickStepLinearListener,\r\n  buildClickStepNonLinearListener\r\n}\r\n","import { show, customProperty, detectAnimation, ClassName } from './util'\r\nimport { buildClickStepLinearListener, buildClickStepNonLinearListener } from './listeners'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  linear: true,\r\n  animation: false,\r\n  selectors: {\r\n    steps: '.step',\r\n    trigger: '.step-trigger',\r\n    stepper: '.bs-stepper'\r\n  }\r\n}\r\n\r\nclass Stepper {\r\n  constructor (element, _options = {}) {\r\n    this._element = element\r\n    this._currentIndex = 0\r\n    this._stepsContents = []\r\n\r\n    this.options = {\r\n      ...DEFAULT_OPTIONS,\r\n      ..._options\r\n    }\r\n\r\n    this.options.selectors = {\r\n      ...DEFAULT_OPTIONS.selectors,\r\n      ...this.options.selectors\r\n    }\r\n\r\n    if (this.options.linear) {\r\n      this._element.classList.add(ClassName.LINEAR)\r\n    }\r\n\r\n    this._steps = [].slice.call(this._element.querySelectorAll(this.options.selectors.steps))\r\n\r\n    this._steps.filter(step => step.hasAttribute('data-target'))\r\n      .forEach(step => {\r\n        this._stepsContents.push(\r\n          this._element.querySelector(step.getAttribute('data-target'))\r\n        )\r\n      })\r\n\r\n    detectAnimation(this._stepsContents, this.options)\r\n    this._setLinkListeners()\r\n    Object.defineProperty(this._element, customProperty, {\r\n      value: this,\r\n      writable: true\r\n    })\r\n\r\n    if (this._steps.length) {\r\n      show(this._element, this._currentIndex, this.options, () => {})\r\n    }\r\n  }\r\n\r\n  // Private\r\n\r\n  _setLinkListeners () {\r\n    this._steps.forEach(step => {\r\n      const trigger = step.querySelector(this.options.selectors.trigger)\r\n\r\n      if (this.options.linear) {\r\n        this._clickStepLinearListener = buildClickStepLinearListener(this.options)\r\n        trigger.addEventListener('click', this._clickStepLinearListener)\r\n      } else {\r\n        this._clickStepNonLinearListener = buildClickStepNonLinearListener(this.options)\r\n        trigger.addEventListener('click', this._clickStepNonLinearListener)\r\n      }\r\n    })\r\n  }\r\n\r\n  // Public\r\n\r\n  next () {\r\n    const nextStep = (this._currentIndex + 1) <= this._steps.length - 1 ? this._currentIndex + 1 : (this._steps.length - 1)\r\n\r\n    show(this._element, nextStep, this.options, () => {\r\n      this._currentIndex = nextStep\r\n    })\r\n  }\r\n\r\n  previous () {\r\n    const previousStep = (this._currentIndex - 1) >= 0 ? this._currentIndex - 1 : 0\r\n\r\n    show(this._element, previousStep, this.options, () => {\r\n      this._currentIndex = previousStep\r\n    })\r\n  }\r\n\r\n  to (stepNumber) {\r\n    const tempIndex = stepNumber - 1\r\n    const nextStep = tempIndex >= 0 && tempIndex < this._steps.length\r\n      ? tempIndex\r\n      : 0\r\n\r\n    show(this._element, nextStep, this.options, () => {\r\n      this._currentIndex = nextStep\r\n    })\r\n  }\r\n\r\n  reset () {\r\n    show(this._element, 0, this.options, () => {\r\n      this._currentIndex = 0\r\n    })\r\n  }\r\n\r\n  destroy () {\r\n    this._steps.forEach(step => {\r\n      const trigger = step.querySelector(this.options.selectors.trigger)\r\n\r\n      if (this.options.linear) {\r\n        trigger.removeEventListener('click', this._clickStepLinearListener)\r\n      } else {\r\n        trigger.removeEventListener('click', this._clickStepNonLinearListener)\r\n      }\r\n    })\r\n\r\n    this._element[customProperty] = undefined\r\n    this._element = undefined\r\n    this._currentIndex = undefined\r\n    this._steps = undefined\r\n    this._stepsContents = undefined\r\n    this._clickStepLinearListener = undefined\r\n    this._clickStepNonLinearListener = undefined\r\n  }\r\n}\r\n\r\nexport default Stepper\r\n","export default __webpack_public_path__ + \"static/media/create-account.9a7744ba.svg\";"],"sourceRoot":""}