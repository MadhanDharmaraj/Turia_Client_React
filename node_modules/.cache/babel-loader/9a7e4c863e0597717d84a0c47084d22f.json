{"ast":null,"code":"// ** React Imports\nimport{Navigate}from'react-router-dom';import{useContext,Suspense}from'react';// ** Context Imports\nimport{AbilityContext}from'@src/utility/context/Can';import{jsx as _jsx}from\"react/jsx-runtime\";var PrivateRoute=function PrivateRoute(_ref){var children=_ref.children,route=_ref.route;// ** Hooks & Vars\nvar ability=useContext(AbilityContext);var user=JSON.parse(localStorage.getItem('userData'));if(route){var action=null;var resource=null;var restrictedRoute=false;if(route.meta){action=route.meta.action;resource=route.meta.resource;restrictedRoute=route.meta.restricted;}if(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}if(user&&restrictedRoute){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}if(user&&restrictedRoute&&user.role==='client'){return/*#__PURE__*/_jsx(Navigate,{to:\"/access-control\"});}if(user&&!ability.can(action||'read',resource)){return/*#__PURE__*/_jsx(Navigate,{to:\"/misc/not-authorized\",replace:true});}}return/*#__PURE__*/_jsx(Suspense,{fallback:null,children:children});};export default PrivateRoute;","map":{"version":3,"names":["Navigate","useContext","Suspense","AbilityContext","PrivateRoute","children","route","ability","user","JSON","parse","localStorage","getItem","action","resource","restrictedRoute","meta","restricted","role","can"],"sources":["/var/www/html/Turia_Client_React/src/@core/components/routes/PrivateRoute.js"],"sourcesContent":["// ** React Imports\nimport { Navigate } from 'react-router-dom'\nimport { useContext, Suspense } from 'react'\n\n// ** Context Imports\nimport { AbilityContext } from '@src/utility/context/Can'\n\nconst PrivateRoute = ({ children, route }) => {\n  // ** Hooks & Vars\n  const ability = useContext(AbilityContext)\n  const user = JSON.parse(localStorage.getItem('userData'))\n\n  if (route) {\n    let action = null\n    let resource = null\n    let restrictedRoute = false\n\n    if (route.meta) {\n      action = route.meta.action\n      resource = route.meta.resource\n      restrictedRoute = route.meta.restricted\n    }\n    if (!user) {\n      return <Navigate to='/login' />\n    }\n    if (user && restrictedRoute) {\n      return <Navigate to='/' />\n    }\n    if (user && restrictedRoute && user.role === 'client') {\n      return <Navigate to='/access-control' />\n    }\n    if (user && !ability.can(action || 'read', resource)) {\n      return <Navigate to='/misc/not-authorized' replace />\n    }\n  }\n\n  return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PrivateRoute\n"],"mappings":"AAAA;AACA,OAASA,QAAT,KAAyB,kBAAzB,CACA,OAASC,UAAT,CAAqBC,QAArB,KAAqC,OAArC,CAEA;AACA,OAASC,cAAT,KAA+B,0BAA/B,C,2CAEA,GAAMC,aAAY,CAAG,QAAfA,aAAe,MAAyB,IAAtBC,SAAsB,MAAtBA,QAAsB,CAAZC,KAAY,MAAZA,KAAY,CAC5C;AACA,GAAMC,QAAO,CAAGN,UAAU,CAACE,cAAD,CAA1B,CACA,GAAMK,KAAI,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAb,CAEA,GAAIN,KAAJ,CAAW,CACT,GAAIO,OAAM,CAAG,IAAb,CACA,GAAIC,SAAQ,CAAG,IAAf,CACA,GAAIC,gBAAe,CAAG,KAAtB,CAEA,GAAIT,KAAK,CAACU,IAAV,CAAgB,CACdH,MAAM,CAAGP,KAAK,CAACU,IAAN,CAAWH,MAApB,CACAC,QAAQ,CAAGR,KAAK,CAACU,IAAN,CAAWF,QAAtB,CACAC,eAAe,CAAGT,KAAK,CAACU,IAAN,CAAWC,UAA7B,CACD,CACD,GAAI,CAACT,IAAL,CAAW,CACT,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAP,CACD,CACD,GAAIA,IAAI,EAAIO,eAAZ,CAA6B,CAC3B,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAAP,CACD,CACD,GAAIP,IAAI,EAAIO,eAAR,EAA2BP,IAAI,CAACU,IAAL,GAAc,QAA7C,CAAuD,CACrD,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,iBAAb,EAAP,CACD,CACD,GAAIV,IAAI,EAAI,CAACD,OAAO,CAACY,GAAR,CAAYN,MAAM,EAAI,MAAtB,CAA8BC,QAA9B,CAAb,CAAsD,CACpD,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,sBAAb,CAAoC,OAAO,KAA3C,EAAP,CACD,CACF,CAED,mBAAO,KAAC,QAAD,EAAU,QAAQ,CAAE,IAApB,UAA2BT,QAA3B,EAAP,CACD,CA9BD,CAgCA,cAAeD,aAAf"},"metadata":{},"sourceType":"module"}