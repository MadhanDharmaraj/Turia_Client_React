{"ast":null,"code":"// ** React Imports\nimport{Fragment,useEffect}from'react';// ** Third Party Components\nimport Prism from'prismjs';// ** Reactstrap Imports\nimport{Row,Col,CardText}from'reactstrap';// ** Demo Components\nimport ButtonTags from'./ButtonTags';import FlatButtons from'./ButtonsFlat';import IconButtons from'./ButtonsIcon';import ButtonSizes from'./ButtonSizes';import ButtonBlock from'./ButtonBlock';import ButtonGroups from'./ButtonGroup';import RoundButtons from'./ButtonsRound';import FilledButtons from'./ButtonsFilled';import ReliefButtons from'./ButtonsRelief';import OutlineButtons from'./ButtonsOutline';import GradientButtons from'./ButtonsGradient';import IconOnlyButtons from'./ButtonsIconOnly';import ButtonCheckboxRadio from'./ButtonCheckboxRadio';// ** Custom Components\nimport Card from'@components/card-snippet';import BreadCrumbs from'@components/breadcrumbs';// ** Source Code\nimport{buttonTags,flatButtons,iconButtons,buttonGroup,buttonSizes,buttonBlock,roundButtons,filledButtons,buttonCBRadio,reliefButtons,outlineButtons,gradientButtons,iconOnlyButtons}from'./ButtonsSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Buttons=function Buttons(){useEffect(function(){Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{title:\"Buttons\",data:[{title:'Components'},{title:'Buttons'}]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Filled\",code:filledButtons,children:[/*#__PURE__*/_jsx(CardText,{className:\"mb-0\",children:\"Reactstrap includes six predefined button styles, each serving its own semantic purpose.\"}),/*#__PURE__*/_jsx(FilledButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Outline\",code:outlineButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"outline\"}),\" with button tag to create an outline button.\"]}),/*#__PURE__*/_jsx(OutlineButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Flat\",code:flatButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsxs(\"code\",{children:[\"color=\\\"flat-\",'colorName',\"\\\"\"]}),\" to create a flat button.\"]}),/*#__PURE__*/_jsx(FlatButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Gradient\",code:gradientButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsxs(\"code\",{children:[\"color=\\\"gradient-\",'colorName',\"\\\"\"]}),\" to create a gradient button.\"]}),/*#__PURE__*/_jsx(GradientButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Relief\",code:reliefButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsxs(\"code\",{children:[\"color=relief-\",'colorName']}),\" to create a relief button.\"]}),/*#__PURE__*/_jsx(ReliefButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Round\",code:roundButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use class \",/*#__PURE__*/_jsx(\"code\",{children:\".round\"}),\" create a square button.\"]}),/*#__PURE__*/_jsx(RoundButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Icons\",code:iconButtons,children:/*#__PURE__*/_jsx(IconButtons,{})})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Icon Only\",code:iconOnlyButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"You can use class \",/*#__PURE__*/_jsx(\"code\",{children:\".btn-icon\"}),\". You can create a rounded button by using\",' ',/*#__PURE__*/_jsx(\"code\",{children:\".rounded-circle\"}),\" with \",/*#__PURE__*/_jsx(\"code\",{children:\".btn-icon\"}),\". You can only use \",/*#__PURE__*/_jsx(\"code\",{children:\".btn-icon\"}),\" when you only want icon in your button\"]}),/*#__PURE__*/_jsx(IconOnlyButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Button Groups\",code:buttonGroup,children:[/*#__PURE__*/_jsx(CardText,{children:\"Group a series of buttons together on a single line with the button group.\"}),/*#__PURE__*/_jsx(ButtonGroups,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Checkbox & radio group\",code:buttonCBRadio,children:/*#__PURE__*/_jsx(ButtonCheckboxRadio,{})})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Sizes\",code:buttonSizes,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"size\"}),\" prop to change size of a button.\"]}),/*#__PURE__*/_jsx(ButtonSizes,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Block Level Buttons\",code:buttonBlock,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Create block level buttons with a mix of our display and gap utilities or by using prop \",/*#__PURE__*/_jsx(\"code\",{children:\"block\"}),\".\"]}),/*#__PURE__*/_jsx(ButtonBlock,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Button Tags\",code:buttonTags,children:/*#__PURE__*/_jsx(ButtonTags,{})})})]})]});};export default Buttons;","map":{"version":3,"names":["Fragment","useEffect","Prism","Row","Col","CardText","ButtonTags","FlatButtons","IconButtons","ButtonSizes","ButtonBlock","ButtonGroups","RoundButtons","FilledButtons","ReliefButtons","OutlineButtons","GradientButtons","IconOnlyButtons","ButtonCheckboxRadio","Card","BreadCrumbs","buttonTags","flatButtons","iconButtons","buttonGroup","buttonSizes","buttonBlock","roundButtons","filledButtons","buttonCBRadio","reliefButtons","outlineButtons","gradientButtons","iconOnlyButtons","Buttons","highlightAll","title"],"sources":["/var/www/html/Turia_Client_React/src/views/components/buttons/index.js"],"sourcesContent":["// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Demo Components\nimport ButtonTags from './ButtonTags'\nimport FlatButtons from './ButtonsFlat'\nimport IconButtons from './ButtonsIcon'\nimport ButtonSizes from './ButtonSizes'\nimport ButtonBlock from './ButtonBlock'\nimport ButtonGroups from './ButtonGroup'\nimport RoundButtons from './ButtonsRound'\nimport FilledButtons from './ButtonsFilled'\nimport ReliefButtons from './ButtonsRelief'\nimport OutlineButtons from './ButtonsOutline'\nimport GradientButtons from './ButtonsGradient'\nimport IconOnlyButtons from './ButtonsIconOnly'\nimport ButtonCheckboxRadio from './ButtonCheckboxRadio'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Source Code\nimport {\n  buttonTags,\n  flatButtons,\n  iconButtons,\n  buttonGroup,\n  buttonSizes,\n  buttonBlock,\n  roundButtons,\n  filledButtons,\n  buttonCBRadio,\n  reliefButtons,\n  outlineButtons,\n  gradientButtons,\n  iconOnlyButtons\n} from './ButtonsSourceCode'\n\nconst Buttons = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbs title='Buttons' data={[{ title: 'Components' }, { title: 'Buttons' }]} />\n      <Row>\n        <Col sm='12'>\n          <Card title='Filled' code={filledButtons}>\n            <CardText className='mb-0'>\n              Reactstrap includes six predefined button styles, each serving its own semantic purpose.\n            </CardText>\n            <FilledButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Outline' code={outlineButtons}>\n            <CardText className='mb-0'>\n              Use prop <code>outline</code> with button tag to create an outline button.\n            </CardText>\n            <OutlineButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Flat' code={flatButtons}>\n            <CardText className='mb-0'>\n              Use <code>color=\"flat-{'colorName'}\"</code> to create a flat button.\n            </CardText>\n            <FlatButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Gradient' code={gradientButtons}>\n            <CardText className='mb-0'>\n              Use <code>color=\"gradient-{'colorName'}\"</code> to create a gradient button.\n            </CardText>\n            <GradientButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Relief' code={reliefButtons}>\n            <CardText className='mb-0'>\n              Use <code>color=relief-{'colorName'}</code> to create a relief button.\n            </CardText>\n            <ReliefButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Round' code={roundButtons}>\n            <CardText className='mb-0'>\n              Use class <code>.round</code> create a square button.\n            </CardText>\n            <RoundButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Icons' code={iconButtons}>\n            <IconButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Icon Only' code={iconOnlyButtons}>\n            <CardText className='mb-0'>\n              You can use class <code>.btn-icon</code>. You can create a rounded button by using{' '}\n              <code>.rounded-circle</code> with <code>.btn-icon</code>. You can only use <code>.btn-icon</code> when you\n              only want icon in your button\n            </CardText>\n            <IconOnlyButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Button Groups' code={buttonGroup}>\n            <CardText>Group a series of buttons together on a single line with the button group.</CardText>\n            <ButtonGroups />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Checkbox & radio group' code={buttonCBRadio}>\n            <ButtonCheckboxRadio />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Sizes' code={buttonSizes}>\n            <CardText className='mb-0'>\n              Use <code>size</code> prop to change size of a button.\n            </CardText>\n            <ButtonSizes />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Block Level Buttons' code={buttonBlock}>\n            <CardText>\n              Create block level buttons with a mix of our display and gap utilities or by using prop <code>block</code>\n              .\n            </CardText>\n            <ButtonBlock />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Button Tags' code={buttonTags}>\n            <ButtonTags />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Buttons\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}