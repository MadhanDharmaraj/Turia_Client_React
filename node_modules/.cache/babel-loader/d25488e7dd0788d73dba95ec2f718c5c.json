{"ast":null,"code":"var _jsxFileName = \"/home/hp/Documents/Test/full-version/src/@core/components/card-snippet/index.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState } from 'react'; // ** Third Party Components\n\nimport PropTypes from 'prop-types';\nimport { Code } from 'react-feather'; // ** Reactstrap Imports\n\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardSnippet = props => {\n  _s();\n\n  // ** Props\n  const {\n    title,\n    children,\n    noBody,\n    code,\n    iconCode\n  } = props; // ** State\n\n  const [isOpen, setIsOpen] = useState(false); // ** If user passes custom icon then render that else render default icon\n\n  const IconCode = iconCode ? iconCode : /*#__PURE__*/_jsxDEV(Code, {\n    size: 15\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 42\n  }, this); // ** To toggle collapse\n\n  const toggle = () => setIsOpen(!isOpen); // ** If user passes noBody then return <Fragment> else return <CardBody>\n\n\n  const Wrapper = noBody ? Fragment : CardBody;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card-snippet\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"views cursor-pointer\",\n        onClick: toggle,\n        children: IconCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      isOpen: isOpen,\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardSnippet, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = CardSnippet;\nexport default CardSnippet; // ** PropTypes\n\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CardSnippet\");","map":{"version":3,"names":["Fragment","useState","PropTypes","Code","Card","CardHeader","CardBody","CardTitle","Collapse","CardSnippet","props","title","children","noBody","code","iconCode","isOpen","setIsOpen","IconCode","toggle","Wrapper","propTypes","node","bool","any","className","string","isRequired"],"sources":["/home/hp/Documents/Test/full-version/src/@core/components/card-snippet/index.js"],"sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,eAArB,C,CAEA;;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,QAAhD,QAAgE,YAAhE;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAAA;;EAC3B;EACA,MAAM;IAAEC,KAAF;IAASC,QAAT;IAAmBC,MAAnB;IAA2BC,IAA3B;IAAiCC;EAAjC,IAA8CL,KAApD,CAF2B,CAI3B;;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAApC,CAL2B,CAO3B;;EACA,MAAMiB,QAAQ,GAAGH,QAAQ,GAAGA,QAAH,gBAAc,QAAC,IAAD;IAAM,IAAI,EAAE;EAAZ;IAAA;IAAA;IAAA;EAAA,QAAvC,CAR2B,CAU3B;;EACA,MAAMI,MAAM,GAAG,MAAMF,SAAS,CAAC,CAACD,MAAF,CAA9B,CAX2B,CAa3B;;;EACA,MAAMI,OAAO,GAAGP,MAAM,GAAGb,QAAH,GAAcM,QAApC;EAEA,oBACE,QAAC,IAAD;IAAM,SAAS,EAAC,cAAhB;IAAA,wBACE,QAAC,UAAD;MAAA,wBACE,QAAC,SAAD;QAAW,GAAG,EAAC,IAAf;QAAA,UAAqBK;MAArB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,sBAAf;QAAsC,OAAO,EAAEQ,MAA/C;QAAA,UACGD;MADH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAOE,QAAC,OAAD;MAAA,UAAUN;IAAV;MAAA;MAAA;MAAA;IAAA,QAPF,eAQE,QAAC,QAAD;MAAU,MAAM,EAAEI,MAAlB;MAAA,uBACE,QAAC,QAAD;QAAA,UAAWF;MAAX;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA9BD;;GAAML,W;;KAAAA,W;AAgCN,eAAeA,WAAf,C,CAEA;;AACAA,WAAW,CAACY,SAAZ,GAAwB;EACtBP,IAAI,EAAEZ,SAAS,CAACoB,IADM;EAEtBT,MAAM,EAAEX,SAAS,CAACqB,IAFI;EAGtBX,QAAQ,EAAEV,SAAS,CAACsB,GAHE;EAItBT,QAAQ,EAAEb,SAAS,CAACoB,IAJE;EAKtBG,SAAS,EAAEvB,SAAS,CAACwB,MALC;EAMtBf,KAAK,EAAET,SAAS,CAACwB,MAAV,CAAiBC;AANF,CAAxB"},"metadata":{},"sourceType":"module"}