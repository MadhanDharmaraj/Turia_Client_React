{"ast":null,"code":"import _slicedToArray from\"/var/www/html/Turia_Client_React/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// ** React Imports\nimport{Fragment,useState,useEffect}from'react';// ** Chat App Component Imports\nimport Chat from'./Chat';import Sidebar from'./SidebarLeft';import UserProfileSidebar from'./UserProfileSidebar';// ** Third Party Components\nimport classnames from'classnames';// ** Store & Actions\nimport{useDispatch,useSelector}from'react-redux';import{getUserProfile,getChatContacts}from'./store';import'@styles/base/pages/app-chat.scss';import'@styles/base/pages/app-chat-list.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AppChat=function AppChat(){// ** Store Vars\nvar dispatch=useDispatch();var store=useSelector(function(state){return state.chat;});// ** States\nvar _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),sidebar=_useState4[0],setSidebar=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),userSidebarRight=_useState6[0],setUserSidebarRight=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),userSidebarLeft=_useState8[0],setUserSidebarLeft=_useState8[1];// ** Sidebar & overlay toggle functions\nvar handleSidebar=function handleSidebar(){return setSidebar(!sidebar);};var handleUserSidebarLeft=function handleUserSidebarLeft(){return setUserSidebarLeft(!userSidebarLeft);};var handleUserSidebarRight=function handleUserSidebarRight(){return setUserSidebarRight(!userSidebarRight);};var handleOverlayClick=function handleOverlayClick(){setSidebar(false);setUserSidebarRight(false);setUserSidebarLeft(false);};// ** Set user function for Right Sidebar\nvar handleUser=function handleUser(obj){return setUser(obj);};// ** Get data on Mount\nuseEffect(function(){dispatch(getChatContacts());dispatch(getUserProfile());},[dispatch]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Sidebar,{store:store,sidebar:sidebar,handleSidebar:handleSidebar,userSidebarLeft:userSidebarLeft,handleUserSidebarLeft:handleUserSidebarLeft}),/*#__PURE__*/_jsx(\"div\",{className:\"content-right\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:classnames('body-content-overlay',{show:userSidebarRight===true||sidebar===true||userSidebarLeft===true}),onClick:handleOverlayClick}),/*#__PURE__*/_jsx(Chat,{store:store,handleUser:handleUser,handleSidebar:handleSidebar,userSidebarLeft:userSidebarLeft,handleUserSidebarRight:handleUserSidebarRight}),/*#__PURE__*/_jsx(UserProfileSidebar,{user:user,userSidebarRight:userSidebarRight,handleUserSidebarRight:handleUserSidebarRight})]})})})]});};export default AppChat;","map":{"version":3,"names":["Fragment","useState","useEffect","Chat","Sidebar","UserProfileSidebar","classnames","useDispatch","useSelector","getUserProfile","getChatContacts","AppChat","dispatch","store","state","chat","user","setUser","sidebar","setSidebar","userSidebarRight","setUserSidebarRight","userSidebarLeft","setUserSidebarLeft","handleSidebar","handleUserSidebarLeft","handleUserSidebarRight","handleOverlayClick","handleUser","obj","show"],"sources":["/var/www/html/Turia_Client_React/src/views/apps/chat/index.js"],"sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Chat App Component Imports\nimport Chat from './Chat'\nimport Sidebar from './SidebarLeft'\nimport UserProfileSidebar from './UserProfileSidebar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserProfile, getChatContacts } from './store'\n\nimport '@styles/base/pages/app-chat.scss'\nimport '@styles/base/pages/app-chat-list.scss'\n\nconst AppChat = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.chat)\n\n  // ** States\n  const [user, setUser] = useState({})\n  const [sidebar, setSidebar] = useState(false)\n  const [userSidebarRight, setUserSidebarRight] = useState(false)\n  const [userSidebarLeft, setUserSidebarLeft] = useState(false)\n\n  // ** Sidebar & overlay toggle functions\n  const handleSidebar = () => setSidebar(!sidebar)\n  const handleUserSidebarLeft = () => setUserSidebarLeft(!userSidebarLeft)\n  const handleUserSidebarRight = () => setUserSidebarRight(!userSidebarRight)\n  const handleOverlayClick = () => {\n    setSidebar(false)\n    setUserSidebarRight(false)\n    setUserSidebarLeft(false)\n  }\n\n  // ** Set user function for Right Sidebar\n  const handleUser = obj => setUser(obj)\n\n  // ** Get data on Mount\n  useEffect(() => {\n    dispatch(getChatContacts())\n    dispatch(getUserProfile())\n  }, [dispatch])\n\n  return (\n    <Fragment>\n      <Sidebar\n        store={store}\n        sidebar={sidebar}\n        handleSidebar={handleSidebar}\n        userSidebarLeft={userSidebarLeft}\n        handleUserSidebarLeft={handleUserSidebarLeft}\n      />\n      <div className='content-right'>\n        <div className='content-wrapper'>\n          <div className='content-body'>\n            <div\n              className={classnames('body-content-overlay', {\n                show: userSidebarRight === true || sidebar === true || userSidebarLeft === true\n              })}\n              onClick={handleOverlayClick}\n            ></div>\n            <Chat\n              store={store}\n              handleUser={handleUser}\n              handleSidebar={handleSidebar}\n              userSidebarLeft={userSidebarLeft}\n              handleUserSidebarRight={handleUserSidebarRight}\n            />\n            <UserProfileSidebar\n              user={user}\n              userSidebarRight={userSidebarRight}\n              handleUserSidebarRight={handleUserSidebarRight}\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default AppChat\n"],"mappings":"sHAAA;AACA,OAASA,QAAT,CAAmBC,QAAnB,CAA6BC,SAA7B,KAA8C,OAA9C,CAEA;AACA,MAAOC,KAAP,KAAiB,QAAjB,CACA,MAAOC,QAAP,KAAoB,eAApB,CACA,MAAOC,mBAAP,KAA+B,sBAA/B,CAEA;AACA,MAAOC,WAAP,KAAuB,YAAvB,CAEA;AACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,cAAT,CAAyBC,eAAzB,KAAgD,SAAhD,CAEA,MAAO,kCAAP,CACA,MAAO,uCAAP,C,wFAEA,GAAMC,QAAO,CAAG,QAAVA,QAAU,EAAM,CACpB;AACA,GAAMC,SAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,MAAK,CAAGL,WAAW,CAAC,SAAAM,KAAK,QAAIA,MAAK,CAACC,IAAV,EAAN,CAAzB,CAEA;AACA,cAAwBd,QAAQ,CAAC,EAAD,CAAhC,wCAAOe,IAAP,eAAaC,OAAb,eACA,eAA8BhB,QAAQ,CAAC,KAAD,CAAtC,yCAAOiB,OAAP,eAAgBC,UAAhB,eACA,eAAgDlB,QAAQ,CAAC,KAAD,CAAxD,yCAAOmB,gBAAP,eAAyBC,mBAAzB,eACA,eAA8CpB,QAAQ,CAAC,KAAD,CAAtD,yCAAOqB,eAAP,eAAwBC,kBAAxB,eAEA;AACA,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,SAAML,WAAU,CAAC,CAACD,OAAF,CAAhB,EAAtB,CACA,GAAMO,sBAAqB,CAAG,QAAxBA,sBAAwB,SAAMF,mBAAkB,CAAC,CAACD,eAAF,CAAxB,EAA9B,CACA,GAAMI,uBAAsB,CAAG,QAAzBA,uBAAyB,SAAML,oBAAmB,CAAC,CAACD,gBAAF,CAAzB,EAA/B,CACA,GAAMO,mBAAkB,CAAG,QAArBA,mBAAqB,EAAM,CAC/BR,UAAU,CAAC,KAAD,CAAV,CACAE,mBAAmB,CAAC,KAAD,CAAnB,CACAE,kBAAkB,CAAC,KAAD,CAAlB,CACD,CAJD,CAMA;AACA,GAAMK,WAAU,CAAG,QAAbA,WAAa,CAAAC,GAAG,QAAIZ,QAAO,CAACY,GAAD,CAAX,EAAtB,CAEA;AACA3B,SAAS,CAAC,UAAM,CACdU,QAAQ,CAACF,eAAe,EAAhB,CAAR,CACAE,QAAQ,CAACH,cAAc,EAAf,CAAR,CACD,CAHQ,CAGN,CAACG,QAAD,CAHM,CAAT,CAKA,mBACE,MAAC,QAAD,yBACE,KAAC,OAAD,EACE,KAAK,CAAEC,KADT,CAEE,OAAO,CAAEK,OAFX,CAGE,aAAa,CAAEM,aAHjB,CAIE,eAAe,CAAEF,eAJnB,CAKE,qBAAqB,CAAEG,qBALzB,EADF,cAQE,YAAK,SAAS,CAAC,eAAf,uBACE,YAAK,SAAS,CAAC,iBAAf,uBACE,aAAK,SAAS,CAAC,cAAf,wBACE,YACE,SAAS,CAAEnB,UAAU,CAAC,sBAAD,CAAyB,CAC5CwB,IAAI,CAAEV,gBAAgB,GAAK,IAArB,EAA6BF,OAAO,GAAK,IAAzC,EAAiDI,eAAe,GAAK,IAD/B,CAAzB,CADvB,CAIE,OAAO,CAAEK,kBAJX,EADF,cAOE,KAAC,IAAD,EACE,KAAK,CAAEd,KADT,CAEE,UAAU,CAAEe,UAFd,CAGE,aAAa,CAAEJ,aAHjB,CAIE,eAAe,CAAEF,eAJnB,CAKE,sBAAsB,CAAEI,sBAL1B,EAPF,cAcE,KAAC,kBAAD,EACE,IAAI,CAAEV,IADR,CAEE,gBAAgB,CAAEI,gBAFpB,CAGE,sBAAsB,CAAEM,sBAH1B,EAdF,GADF,EADF,EARF,GADF,CAmCD,CAjED,CAmEA,cAAef,QAAf"},"metadata":{},"sourceType":"module"}