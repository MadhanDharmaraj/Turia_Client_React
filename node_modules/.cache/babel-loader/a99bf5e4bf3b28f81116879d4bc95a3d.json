{"ast":null,"code":"// ** React Imports\nimport ReactDOM from'react-dom';import{Suspense,lazy}from'react';import{BrowserRouter}from'react-router-dom';// ** Redux Imports\nimport{store}from'./redux/store';import{Provider}from'react-redux';// ** Intl, CASL & ThemeColors Context\nimport ability from'./configs/acl/ability';import{AbilityContext}from'./utility/context/Can';import{ThemeContext}from'./utility/context/ThemeColors';// ** ThemeConfig\nimport themeConfig from'./configs/themeConfig';// ** Toast\nimport{Toaster}from'react-hot-toast';// ** i18n\nimport'./configs/i18n';// ** Spinner (Splash Screen)\nimport Spinner from'./@core/components/spinner/Fallback-spinner';// ** Ripple Button\nimport'./@core/components/ripple-button';// ** Fake Database\nimport'./@fake-db';// ** PrismJS\nimport'prismjs';import'prismjs/themes/prism-tomorrow.css';import'prismjs/components/prism-jsx.min';// ** React Perfect Scrollbar\nimport'react-perfect-scrollbar/dist/css/styles.css';// ** React Hot Toast Styles\nimport'@styles/react/libs/react-hot-toasts/react-hot-toasts.scss';// ** Core styles\nimport'./@core/assets/fonts/feather/iconfont.css';import'./@core/scss/core.scss';import'./assets/scss/style.scss';// ** Service Worker\nimport*as serviceWorker from'./serviceWorker';// ** Lazy load app\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LazyApp=/*#__PURE__*/lazy(function(){return import('./App');});ReactDOM.render(/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Spinner,{}),children:/*#__PURE__*/_jsx(AbilityContext.Provider,{value:ability,children:/*#__PURE__*/_jsxs(ThemeContext,{children:[/*#__PURE__*/_jsx(LazyApp,{}),/*#__PURE__*/_jsx(Toaster,{position:themeConfig.layout.toastPosition,toastOptions:{className:'react-hot-toast'}})]})})})})}),document.getElementById('root'));// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","map":{"version":3,"names":["ReactDOM","Suspense","lazy","BrowserRouter","store","Provider","ability","AbilityContext","ThemeContext","themeConfig","Toaster","Spinner","serviceWorker","LazyApp","render","layout","toastPosition","className","document","getElementById","unregister"],"sources":["/var/www/html/Turia_Client_React/src/index.js"],"sourcesContent":["// ** React Imports\nimport ReactDOM from 'react-dom'\nimport { Suspense, lazy } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\n\n// ** Redux Imports\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\n\n// ** Intl, CASL & ThemeColors Context\nimport ability from './configs/acl/ability'\nimport { AbilityContext } from './utility/context/Can'\nimport { ThemeContext } from './utility/context/ThemeColors'\n\n// ** ThemeConfig\nimport themeConfig from './configs/themeConfig'\n\n// ** Toast\nimport { Toaster } from 'react-hot-toast'\n\n// ** i18n\nimport './configs/i18n'\n\n// ** Spinner (Splash Screen)\nimport Spinner from './@core/components/spinner/Fallback-spinner'\n\n// ** Ripple Button\nimport './@core/components/ripple-button'\n\n// ** Fake Database\nimport './@fake-db'\n\n// ** PrismJS\nimport 'prismjs'\nimport 'prismjs/themes/prism-tomorrow.css'\nimport 'prismjs/components/prism-jsx.min'\n\n// ** React Perfect Scrollbar\nimport 'react-perfect-scrollbar/dist/css/styles.css'\n\n// ** React Hot Toast Styles\nimport '@styles/react/libs/react-hot-toasts/react-hot-toasts.scss'\n\n// ** Core styles\nimport './@core/assets/fonts/feather/iconfont.css'\nimport './@core/scss/core.scss'\nimport './assets/scss/style.scss'\n\n// ** Service Worker\nimport * as serviceWorker from './serviceWorker'\n\n// ** Lazy load app\nconst LazyApp = lazy(() => import('./App'))\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <Suspense fallback={<Spinner />}>\n        <AbilityContext.Provider value={ability}>\n          <ThemeContext>\n            <LazyApp />\n            <Toaster position={themeConfig.layout.toastPosition} toastOptions={{ className: 'react-hot-toast' }} />\n          </ThemeContext>\n        </AbilityContext.Provider>\n      </Suspense>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"mappings":"AAAA;AACA,MAAOA,SAAP,KAAqB,WAArB,CACA,OAASC,QAAT,CAAmBC,IAAnB,KAA+B,OAA/B,CACA,OAASC,aAAT,KAA8B,kBAA9B,CAEA;AACA,OAASC,KAAT,KAAsB,eAAtB,CACA,OAASC,QAAT,KAAyB,aAAzB,CAEA;AACA,MAAOC,QAAP,KAAoB,uBAApB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,YAAT,KAA6B,+BAA7B,CAEA;AACA,MAAOC,YAAP,KAAwB,uBAAxB,CAEA;AACA,OAASC,OAAT,KAAwB,iBAAxB,CAEA;AACA,MAAO,gBAAP,CAEA;AACA,MAAOC,QAAP,KAAoB,6CAApB,CAEA;AACA,MAAO,kCAAP,CAEA;AACA,MAAO,YAAP,CAEA;AACA,MAAO,SAAP,CACA,MAAO,mCAAP,CACA,MAAO,kCAAP,CAEA;AACA,MAAO,6CAAP,CAEA;AACA,MAAO,2DAAP,CAEA;AACA,MAAO,2CAAP,CACA,MAAO,wBAAP,CACA,MAAO,0BAAP,CAEA;AACA,MAAO,GAAKC,cAAZ,KAA+B,iBAA/B,CAEA;wFACA,GAAMC,QAAO,cAAGX,IAAI,CAAC,iBAAM,QAAO,OAAP,CAAN,EAAD,CAApB,CACAF,QAAQ,CAACc,MAAT,cACE,KAAC,aAAD,wBACE,KAAC,QAAD,EAAU,KAAK,CAAEV,KAAjB,uBACE,KAAC,QAAD,EAAU,QAAQ,cAAE,KAAC,OAAD,IAApB,uBACE,KAAC,cAAD,CAAgB,QAAhB,EAAyB,KAAK,CAAEE,OAAhC,uBACE,MAAC,YAAD,yBACE,KAAC,OAAD,IADF,cAEE,KAAC,OAAD,EAAS,QAAQ,CAAEG,WAAW,CAACM,MAAZ,CAAmBC,aAAtC,CAAqD,YAAY,CAAE,CAAEC,SAAS,CAAE,iBAAb,CAAnE,EAFF,GADF,EADF,EADF,EADF,EADF,CAaEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAbF,EAgBA;AACA;AACA;AACAP,aAAa,CAACQ,UAAd"},"metadata":{},"sourceType":"module"}