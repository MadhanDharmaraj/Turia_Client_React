{"ast":null,"code":"// ** React Imports\nimport{Fragment,useEffect}from'react';// ** Third Party Components\nimport Prism from'prismjs';// ** Reactstrap Imports\nimport{Row,Col,CardText}from'reactstrap';// ** Third Party Components\nimport Card from'@components/card-snippet';import BreadCrumbs from'@components/breadcrumbs';// ** Demo Components\nimport AvatarSizes from'./AvatarSizes';import AvatarIcons from'./AvatarIcons';import AvatarGroup from'./AvatarGroup';import AvatarColors from'./AvatarColors';import AvatarStatus from'./AvatarStatus';import AvatarInitials from'./AvatarInitials';import AvatarLightColors from'./AvatarLightColors';import AvatarGroupTooltip from'./AvatarGroupTooltip';// ** Source Code\nimport{avatarIcons,avatarSizes,avatarGroup,avatarColors,avatarStatus,avatarInitials,avatarLightColors,avatarGroupTooltip}from'./AvatarSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Avatar=function Avatar(){useEffect(function(){Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{title:\"Avatar\",data:[{title:'Components'},{title:'Avatar'}]}),/*#__PURE__*/_jsxs(Row,{className:\"match-height\",children:[/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Sizes\",code:avatarSizes,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"size=[sm | lg | xl]\"}),\" prop to change avatar's size. You can also use \",/*#__PURE__*/_jsx(\"code\",{children:\"height\"}),\" &\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"width\"}),\" prop for a custom size\"]}),/*#__PURE__*/_jsx(AvatarSizes,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Intials\",code:avatarInitials,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"initials\"}),\" to show only Initials of content.\"]}),/*#__PURE__*/_jsx(AvatarInitials,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Colors\",code:avatarColors,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"color=[primary | success | danger | info | warning | dark]\"}),\" to change background color of your avatar.\"]}),/*#__PURE__*/_jsx(AvatarColors,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Light Colors\",code:avatarLightColors,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"color=[light-primary | light-success | light-danger | light-info | light-warning | light-dark]\"}),' ',\"to change background color of your avatar.\"]}),/*#__PURE__*/_jsx(AvatarLightColors,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",lg:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Icons\",code:avatarIcons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"icon\"}),\" to create avatar with icon.\"]}),/*#__PURE__*/_jsx(AvatarIcons,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Status\",code:avatarStatus,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"status=[online | offline | away | busy]\"}),\" to create avatar with status.\"]}),/*#__PURE__*/_jsx(AvatarStatus,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Avatar Group\",code:avatarGroup,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"<AvatarGroup />\"}),\" component and pass \",/*#__PURE__*/_jsx(\"code\",{children:\"data\"}),\" prop to create a grouped avatar.\"]}),/*#__PURE__*/_jsx(CardText,{children:\"Data prop must be an array of object which contains props to be passed on avatar.\"}),/*#__PURE__*/_jsx(AvatarGroup,{})]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Avatar Group Tooltip\",code:avatarGroupTooltip,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Add an extra property of \",/*#__PURE__*/_jsx(\"code\",{children:\"title\"}),\" in the data you pass in \",/*#__PURE__*/_jsx(\"code\",{children:\"<AvatarGroup />\"}),\" to create avatar group with tooltip.\"]}),/*#__PURE__*/_jsx(AvatarGroupTooltip,{})]})})]})]});};export default Avatar;","map":{"version":3,"names":["Fragment","useEffect","Prism","Row","Col","CardText","Card","BreadCrumbs","AvatarSizes","AvatarIcons","AvatarGroup","AvatarColors","AvatarStatus","AvatarInitials","AvatarLightColors","AvatarGroupTooltip","avatarIcons","avatarSizes","avatarGroup","avatarColors","avatarStatus","avatarInitials","avatarLightColors","avatarGroupTooltip","Avatar","highlightAll","title"],"sources":["/var/www/html/Turia_Client_React/src/views/components/avatar/index.js"],"sourcesContent":["// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport AvatarSizes from './AvatarSizes'\nimport AvatarIcons from './AvatarIcons'\nimport AvatarGroup from './AvatarGroup'\nimport AvatarColors from './AvatarColors'\nimport AvatarStatus from './AvatarStatus'\nimport AvatarInitials from './AvatarInitials'\nimport AvatarLightColors from './AvatarLightColors'\nimport AvatarGroupTooltip from './AvatarGroupTooltip'\n\n// ** Source Code\nimport {\n  avatarIcons,\n  avatarSizes,\n  avatarGroup,\n  avatarColors,\n  avatarStatus,\n  avatarInitials,\n  avatarLightColors,\n  avatarGroupTooltip\n} from './AvatarSourceCode'\n\nconst Avatar = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbs title='Avatar' data={[{ title: 'Components' }, { title: 'Avatar' }]} />\n      <Row className='match-height'>\n        <Col xl='6' lg='12'>\n          <Card title='Sizes' code={avatarSizes}>\n            <CardText className='mb-0'>\n              Use <code>size=[sm | lg | xl]</code> prop to change avatar's size. You can also use <code>height</code> &{' '}\n              <code>width</code> prop for a custom size\n            </CardText>\n            <AvatarSizes />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Intials' code={avatarInitials}>\n            <CardText className='mb-0'>\n              Use prop <code>initials</code> to show only Initials of content.\n            </CardText>\n            <AvatarInitials />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Colors' code={avatarColors}>\n            <CardText className='mb-0'>\n              Use prop <code>color=[primary | success | danger | info | warning | dark]</code> to change background\n              color of your avatar.\n            </CardText>\n            <AvatarColors />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Light Colors' code={avatarLightColors}>\n            <CardText className='mb-0'>\n              Use prop{' '}\n              <code>\n                color=[light-primary | light-success | light-danger | light-info | light-warning | light-dark]\n              </code>{' '}\n              to change background color of your avatar.\n            </CardText>\n            <AvatarLightColors />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Icons' code={avatarIcons}>\n            <CardText className='mb-0'>\n              Use prop <code>icon</code> to create avatar with icon.\n            </CardText>\n            <AvatarIcons />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Status' code={avatarStatus}>\n            <CardText className='mb-0'>\n              Use prop <code>status=[online | offline | away | busy]</code> to create avatar with status.\n            </CardText>\n            <AvatarStatus />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Avatar Group' code={avatarGroup}>\n            <CardText>\n              Use <code>&lt;AvatarGroup /&gt;</code> component and pass <code>data</code> prop to create a grouped\n              avatar.\n            </CardText>\n            <CardText>Data prop must be an array of object which contains props to be passed on avatar.</CardText>\n            <AvatarGroup />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Avatar Group Tooltip' code={avatarGroupTooltip}>\n            <CardText>\n              Add an extra property of <code>title</code> in the data you pass in <code>&lt;AvatarGroup /&gt;</code> to\n              create avatar group with tooltip.\n            </CardText>\n\n            <AvatarGroupTooltip />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Avatar\n"],"mappings":"AAAA;AACA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA;AACA,MAAOC,MAAP,KAAkB,SAAlB,CAEA;AACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,QAAnB,KAAmC,YAAnC,CAEA;AACA,MAAOC,KAAP,KAAiB,0BAAjB,CACA,MAAOC,YAAP,KAAwB,yBAAxB,CAEA;AACA,MAAOC,YAAP,KAAwB,eAAxB,CACA,MAAOC,YAAP,KAAwB,eAAxB,CACA,MAAOC,YAAP,KAAwB,eAAxB,CACA,MAAOC,aAAP,KAAyB,gBAAzB,CACA,MAAOC,aAAP,KAAyB,gBAAzB,CACA,MAAOC,eAAP,KAA2B,kBAA3B,CACA,MAAOC,kBAAP,KAA8B,qBAA9B,CACA,MAAOC,mBAAP,KAA+B,sBAA/B,CAEA;AACA,OACEC,WADF,CAEEC,WAFF,CAGEC,WAHF,CAIEC,YAJF,CAKEC,YALF,CAMEC,cANF,CAOEC,iBAPF,CAQEC,kBARF,KASO,oBATP,C,wFAWA,GAAMC,OAAM,CAAG,QAATA,OAAS,EAAM,CACnBvB,SAAS,CAAC,UAAM,CACdC,KAAK,CAACuB,YAAN,GACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,MAAC,QAAD,yBACE,KAAC,WAAD,EAAa,KAAK,CAAC,QAAnB,CAA4B,IAAI,CAAE,CAAC,CAAEC,KAAK,CAAE,YAAT,CAAD,CAA0B,CAAEA,KAAK,CAAE,QAAT,CAA1B,CAAlC,EADF,cAEE,MAAC,GAAD,EAAK,SAAS,CAAC,cAAf,wBACE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,IAAI,CAAET,WAA1B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,+BACM,6CADN,iEACsF,gCADtF,MAC4G,GAD5G,cAEE,+BAFF,6BADF,cAKE,KAAC,WAAD,IALF,GADF,EADF,cAUE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,CAAsB,IAAI,CAAEI,cAA5B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,oCACW,kCADX,wCADF,cAIE,KAAC,cAAD,IAJF,GADF,EAVF,cAkBE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,CAAqB,IAAI,CAAEF,YAA3B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,oCACW,oFADX,iDADF,cAKE,KAAC,YAAD,IALF,GADF,EAlBF,cA2BE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,cAAZ,CAA2B,IAAI,CAAEG,iBAAjC,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,sBACW,GADX,cAEE,wHAFF,CAIU,GAJV,gDADF,cAQE,KAAC,iBAAD,IARF,GADF,EA3BF,cAuCE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,IAAI,CAAEN,WAA1B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,oCACW,8BADX,kCADF,cAIE,KAAC,WAAD,IAJF,GADF,EAvCF,cA+CE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,CAAqB,IAAI,CAAEI,YAA3B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,oCACW,iEADX,oCADF,cAIE,KAAC,YAAD,IAJF,GADF,EA/CF,cAuDE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,cAAZ,CAA2B,IAAI,CAAEF,WAAjC,wBACE,MAAC,QAAD,gCACM,yCADN,qCAC4D,8BAD5D,uCADF,cAKE,KAAC,QAAD,gGALF,cAME,KAAC,WAAD,IANF,GADF,EAvDF,cAiEE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,sBAAZ,CAAmC,IAAI,CAAEK,kBAAzC,wBACE,MAAC,QAAD,qDAC2B,+BAD3B,0CACsE,yCADtE,2CADF,cAME,KAAC,kBAAD,IANF,GADF,EAjEF,GAFF,GADF,CAiFD,CAtFD,CAuFA,cAAeC,OAAf"},"metadata":{},"sourceType":"module"}