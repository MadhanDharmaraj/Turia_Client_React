{"ast":null,"code":"import _objectSpread from\"/var/www/html/Turia_Client_React/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// ** React Import\nimport{useEffect,useRef,memo,Fragment}from'react';// ** Full Calendar & it's Plugins\nimport FullCalendar from'@fullcalendar/react';import listPlugin from'@fullcalendar/list';import dayGridPlugin from'@fullcalendar/daygrid';import timeGridPlugin from'@fullcalendar/timegrid';import interactionPlugin from'@fullcalendar/interaction';// ** Third Party Components\nimport toast from'react-hot-toast';import{Menu}from'react-feather';import{Card,CardBody}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Calendar=function Calendar(props){// ** Refs\nvar calendarRef=useRef(null);// ** Props\nvar store=props.store,isRtl=props.isRtl,dispatch=props.dispatch,calendarsColor=props.calendarsColor,calendarApi=props.calendarApi,setCalendarApi=props.setCalendarApi,handleAddEventSidebar=props.handleAddEventSidebar,blankEvent=props.blankEvent,toggleSidebar=props.toggleSidebar,selectEvent=props.selectEvent,updateEvent=props.updateEvent;// ** UseEffect checks for CalendarAPI Update\nuseEffect(function(){if(calendarApi===null){setCalendarApi(calendarRef.current.getApi());}},[calendarApi]);// ** calendarOptions(Props)\nvar calendarOptions={events:store.events.length?store.events:[],plugins:[interactionPlugin,dayGridPlugin,timeGridPlugin,listPlugin],initialView:'dayGridMonth',headerToolbar:{start:'sidebarToggle, prev,next, title',end:'dayGridMonth,timeGridWeek,timeGridDay,listMonth'},/*\n      Enable dragging and resizing event\n      ? Docs: https://fullcalendar.io/docs/editable\n    */editable:true,/*\n      Enable resizing event from start\n      ? Docs: https://fullcalendar.io/docs/eventResizableFromStart\n    */eventResizableFromStart:true,/*\n      Automatically scroll the scroll-containers during event drag-and-drop and date selecting\n      ? Docs: https://fullcalendar.io/docs/dragScroll\n    */dragScroll:true,/*\n      Max number of events within a given day\n      ? Docs: https://fullcalendar.io/docs/dayMaxEvents\n    */dayMaxEvents:2,/*\n      Determines if day names and week names are clickable\n      ? Docs: https://fullcalendar.io/docs/navLinks\n    */navLinks:true,eventClassNames:function eventClassNames(_ref){var calendarEvent=_ref.event;// eslint-disable-next-line no-underscore-dangle\nvar colorName=calendarsColor[calendarEvent._def.extendedProps.calendar];return[// Background Color\n\"bg-light-\".concat(colorName)];},eventClick:function eventClick(_ref2){var clickedEvent=_ref2.event;dispatch(selectEvent(clickedEvent));handleAddEventSidebar();// * Only grab required field otherwise it goes in infinity loop\n// ! Always grab all fields rendered by form (even if it get `undefined`) otherwise due to Vue3/Composition API you might get: \"object is not extensible\"\n// event.value = grabEventDataFromEventApi(clickedEvent)\n// eslint-disable-next-line no-use-before-define\n// isAddNewEventSidebarActive.value = true\n},customButtons:{sidebarToggle:{text:/*#__PURE__*/_jsx(Menu,{className:\"d-xl-none d-block\"}),click:function click(){toggleSidebar(true);}}},dateClick:function dateClick(info){var ev=blankEvent;ev.start=info.date;ev.end=info.date;dispatch(selectEvent(ev));handleAddEventSidebar();},/*\n      Handle event drop (Also include dragged event)\n      ? Docs: https://fullcalendar.io/docs/eventDrop\n      ? We can use `eventDragStop` but it doesn't return updated event so we have to use `eventDrop` which returns updated event\n    */eventDrop:function eventDrop(_ref3){var droppedEvent=_ref3.event;dispatch(updateEvent(droppedEvent));toast.success('Event Updated');},/*\n      Handle event resize\n      ? Docs: https://fullcalendar.io/docs/eventResize\n    */eventResize:function eventResize(_ref4){var resizedEvent=_ref4.event;dispatch(updateEvent(resizedEvent));toast.success('Event Updated');},ref:calendarRef,// Get direction from app state (store)\ndirection:isRtl?'rtl':'ltr'};return/*#__PURE__*/_jsx(Card,{className:\"shadow-none border-0 mb-0 rounded-0\",children:/*#__PURE__*/_jsxs(CardBody,{className:\"pb-0\",children:[/*#__PURE__*/_jsx(FullCalendar,_objectSpread({},calendarOptions)),' ']})});};export default/*#__PURE__*/memo(Calendar);","map":{"version":3,"names":["useEffect","useRef","memo","Fragment","FullCalendar","listPlugin","dayGridPlugin","timeGridPlugin","interactionPlugin","toast","Menu","Card","CardBody","Calendar","props","calendarRef","store","isRtl","dispatch","calendarsColor","calendarApi","setCalendarApi","handleAddEventSidebar","blankEvent","toggleSidebar","selectEvent","updateEvent","current","getApi","calendarOptions","events","length","plugins","initialView","headerToolbar","start","end","editable","eventResizableFromStart","dragScroll","dayMaxEvents","navLinks","eventClassNames","calendarEvent","event","colorName","_def","extendedProps","calendar","eventClick","clickedEvent","customButtons","sidebarToggle","text","click","dateClick","info","ev","date","eventDrop","droppedEvent","success","eventResize","resizedEvent","ref","direction"],"sources":["/var/www/html/Turia_Client_React/src/views/apps/calendar/Calendar.js"],"sourcesContent":["// ** React Import\nimport { useEffect, useRef, memo, Fragment } from 'react'\n\n// ** Full Calendar & it's Plugins\nimport FullCalendar from '@fullcalendar/react'\nimport listPlugin from '@fullcalendar/list'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\n\n// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Menu } from 'react-feather'\nimport { Card, CardBody } from 'reactstrap'\n\nconst Calendar = props => {\n  // ** Refs\n  const calendarRef = useRef(null)\n\n  // ** Props\n  const {\n    store,\n    isRtl,\n    dispatch,\n    calendarsColor,\n    calendarApi,\n    setCalendarApi,\n    handleAddEventSidebar,\n    blankEvent,\n    toggleSidebar,\n    selectEvent,\n    updateEvent\n  } = props\n\n  // ** UseEffect checks for CalendarAPI Update\n  useEffect(() => {\n    if (calendarApi === null) {\n      setCalendarApi(calendarRef.current.getApi())\n    }\n  }, [calendarApi])\n\n  // ** calendarOptions(Props)\n  const calendarOptions = {\n    events: store.events.length ? store.events : [],\n    plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin, listPlugin],\n    initialView: 'dayGridMonth',\n    headerToolbar: {\n      start: 'sidebarToggle, prev,next, title',\n      end: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n    },\n    /*\n      Enable dragging and resizing event\n      ? Docs: https://fullcalendar.io/docs/editable\n    */\n    editable: true,\n\n    /*\n      Enable resizing event from start\n      ? Docs: https://fullcalendar.io/docs/eventResizableFromStart\n    */\n    eventResizableFromStart: true,\n\n    /*\n      Automatically scroll the scroll-containers during event drag-and-drop and date selecting\n      ? Docs: https://fullcalendar.io/docs/dragScroll\n    */\n    dragScroll: true,\n\n    /*\n      Max number of events within a given day\n      ? Docs: https://fullcalendar.io/docs/dayMaxEvents\n    */\n    dayMaxEvents: 2,\n\n    /*\n      Determines if day names and week names are clickable\n      ? Docs: https://fullcalendar.io/docs/navLinks\n    */\n    navLinks: true,\n\n    eventClassNames({ event: calendarEvent }) {\n      // eslint-disable-next-line no-underscore-dangle\n      const colorName = calendarsColor[calendarEvent._def.extendedProps.calendar]\n\n      return [\n        // Background Color\n        `bg-light-${colorName}`\n      ]\n    },\n\n    eventClick({ event: clickedEvent }) {\n      dispatch(selectEvent(clickedEvent))\n      handleAddEventSidebar()\n\n      // * Only grab required field otherwise it goes in infinity loop\n      // ! Always grab all fields rendered by form (even if it get `undefined`) otherwise due to Vue3/Composition API you might get: \"object is not extensible\"\n      // event.value = grabEventDataFromEventApi(clickedEvent)\n\n      // eslint-disable-next-line no-use-before-define\n      // isAddNewEventSidebarActive.value = true\n    },\n\n    customButtons: {\n      sidebarToggle: {\n        text: <Menu className='d-xl-none d-block' />,\n        click() {\n          toggleSidebar(true)\n        }\n      }\n    },\n\n    dateClick(info) {\n      const ev = blankEvent\n      ev.start = info.date\n      ev.end = info.date\n      dispatch(selectEvent(ev))\n      handleAddEventSidebar()\n    },\n\n    /*\n      Handle event drop (Also include dragged event)\n      ? Docs: https://fullcalendar.io/docs/eventDrop\n      ? We can use `eventDragStop` but it doesn't return updated event so we have to use `eventDrop` which returns updated event\n    */\n    eventDrop({ event: droppedEvent }) {\n      dispatch(updateEvent(droppedEvent))\n      toast.success('Event Updated')\n    },\n\n    /*\n      Handle event resize\n      ? Docs: https://fullcalendar.io/docs/eventResize\n    */\n    eventResize({ event: resizedEvent }) {\n      dispatch(updateEvent(resizedEvent))\n      toast.success('Event Updated')\n    },\n\n    ref: calendarRef,\n\n    // Get direction from app state (store)\n    direction: isRtl ? 'rtl' : 'ltr'\n  }\n\n  return (\n    <Card className='shadow-none border-0 mb-0 rounded-0'>\n      <CardBody className='pb-0'>\n        <FullCalendar {...calendarOptions} />{' '}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default memo(Calendar)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}