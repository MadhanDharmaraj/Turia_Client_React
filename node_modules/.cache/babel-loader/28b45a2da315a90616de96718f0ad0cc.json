{"ast":null,"code":"import _slicedToArray from\"/var/www/html/Turia_Client_React/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// ** React Imports\nimport{useParams}from'react-router-dom';import{Fragment,useEffect,useState}from'react';// ** Email App Component Imports\nimport Mails from'./Mails';import Sidebar from'./Sidebar';// ** Third Party Components\nimport classnames from'classnames';// ** Store & Actions\nimport{useDispatch,useSelector}from'react-redux';import{getMails,selectMail,updateMails,paginateMail,selectAllMail,updateMailLabel,resetSelectedMail,selectCurrentMail}from'./store';// ** Styles\nimport'@styles/react/apps/app-email.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EmailApp=function EmailApp(){// ** States\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),openMail=_useState4[0],setOpenMail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),sidebarOpen=_useState6[0],setSidebarOpen=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),composeOpen=_useState8[0],setComposeOpen=_useState8[1];// ** Toggle Compose Function\nvar toggleCompose=function toggleCompose(){return setComposeOpen(!composeOpen);};// ** Store Variables\nvar dispatch=useDispatch();var store=useSelector(function(state){return state.email;});// ** Vars\nvar params=useParams();// ** UseEffect: GET initial data on Mount\nuseEffect(function(){dispatch(getMails({q:query||'',folder:params.folder||'inbox',label:params.label||''}));},[query,params.folder,params.label]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Sidebar,{store:store,dispatch:dispatch,getMails:getMails,setOpenMail:setOpenMail,sidebarOpen:sidebarOpen,toggleCompose:toggleCompose,setSidebarOpen:setSidebarOpen,resetSelectedMail:resetSelectedMail}),/*#__PURE__*/_jsx(\"div\",{className:\"content-right\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:classnames('body-content-overlay',{show:sidebarOpen}),onClick:function onClick(){return setSidebarOpen(false);}}),/*#__PURE__*/_jsx(Mails,{store:store,query:query,setQuery:setQuery,dispatch:dispatch,getMails:getMails,openMail:openMail,selectMail:selectMail,setOpenMail:setOpenMail,updateMails:updateMails,composeOpen:composeOpen,paginateMail:paginateMail,selectAllMail:selectAllMail,toggleCompose:toggleCompose,setSidebarOpen:setSidebarOpen,updateMailLabel:updateMailLabel,selectCurrentMail:selectCurrentMail,resetSelectedMail:resetSelectedMail})]})})]});};export default EmailApp;","map":{"version":3,"names":["useParams","Fragment","useEffect","useState","Mails","Sidebar","classnames","useDispatch","useSelector","getMails","selectMail","updateMails","paginateMail","selectAllMail","updateMailLabel","resetSelectedMail","selectCurrentMail","EmailApp","query","setQuery","openMail","setOpenMail","sidebarOpen","setSidebarOpen","composeOpen","setComposeOpen","toggleCompose","dispatch","store","state","email","params","q","folder","label","show"],"sources":["/var/www/html/Turia_Client_React/src/views/apps/email/index.js"],"sourcesContent":["// ** React Imports\nimport { useParams } from 'react-router-dom'\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Email App Component Imports\nimport Mails from './Mails'\nimport Sidebar from './Sidebar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getMails,\n  selectMail,\n  updateMails,\n  paginateMail,\n  selectAllMail,\n  updateMailLabel,\n  resetSelectedMail,\n  selectCurrentMail\n} from './store'\n\n// ** Styles\nimport '@styles/react/apps/app-email.scss'\n\nconst EmailApp = () => {\n  // ** States\n  const [query, setQuery] = useState('')\n  const [openMail, setOpenMail] = useState(false)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [composeOpen, setComposeOpen] = useState(false)\n\n  // ** Toggle Compose Function\n  const toggleCompose = () => setComposeOpen(!composeOpen)\n\n  // ** Store Variables\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.email)\n\n  // ** Vars\n  const params = useParams()\n\n  // ** UseEffect: GET initial data on Mount\n  useEffect(() => {\n    dispatch(getMails({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\n  }, [query, params.folder, params.label])\n\n  return (\n    <Fragment>\n      <Sidebar\n        store={store}\n        dispatch={dispatch}\n        getMails={getMails}\n        setOpenMail={setOpenMail}\n        sidebarOpen={sidebarOpen}\n        toggleCompose={toggleCompose}\n        setSidebarOpen={setSidebarOpen}\n        resetSelectedMail={resetSelectedMail}\n      />\n      <div className='content-right'>\n        <div className='content-body'>\n          <div\n            className={classnames('body-content-overlay', {\n              show: sidebarOpen\n            })}\n            onClick={() => setSidebarOpen(false)}\n          ></div>\n          <Mails\n            store={store}\n            query={query}\n            setQuery={setQuery}\n            dispatch={dispatch}\n            getMails={getMails}\n            openMail={openMail}\n            selectMail={selectMail}\n            setOpenMail={setOpenMail}\n            updateMails={updateMails}\n            composeOpen={composeOpen}\n            paginateMail={paginateMail}\n            selectAllMail={selectAllMail}\n            toggleCompose={toggleCompose}\n            setSidebarOpen={setSidebarOpen}\n            updateMailLabel={updateMailLabel}\n            selectCurrentMail={selectCurrentMail}\n            resetSelectedMail={resetSelectedMail}\n          />\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default EmailApp\n"],"mappings":"sHAAA;AACA,OAASA,SAAT,KAA0B,kBAA1B,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,QAA9B,KAA8C,OAA9C,CAEA;AACA,MAAOC,MAAP,KAAkB,SAAlB,CACA,MAAOC,QAAP,KAAoB,WAApB,CAEA;AACA,MAAOC,WAAP,KAAuB,YAAvB,CAEA;AACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,QADF,CAEEC,UAFF,CAGEC,WAHF,CAIEC,YAJF,CAKEC,aALF,CAMEC,eANF,CAOEC,iBAPF,CAQEC,iBARF,KASO,SATP,CAWA;AACA,MAAO,mCAAP,C,wFAEA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,EAAM,CACrB;AACA,cAA0Bd,QAAQ,CAAC,EAAD,CAAlC,wCAAOe,KAAP,eAAcC,QAAd,eACA,eAAgChB,QAAQ,CAAC,KAAD,CAAxC,yCAAOiB,QAAP,eAAiBC,WAAjB,eACA,eAAsClB,QAAQ,CAAC,KAAD,CAA9C,yCAAOmB,WAAP,eAAoBC,cAApB,eACA,eAAsCpB,QAAQ,CAAC,KAAD,CAA9C,yCAAOqB,WAAP,eAAoBC,cAApB,eAEA;AACA,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,SAAMD,eAAc,CAAC,CAACD,WAAF,CAApB,EAAtB,CAEA;AACA,GAAMG,SAAQ,CAAGpB,WAAW,EAA5B,CACA,GAAMqB,MAAK,CAAGpB,WAAW,CAAC,SAAAqB,KAAK,QAAIA,MAAK,CAACC,KAAV,EAAN,CAAzB,CAEA;AACA,GAAMC,OAAM,CAAG/B,SAAS,EAAxB,CAEA;AACAE,SAAS,CAAC,UAAM,CACdyB,QAAQ,CAAClB,QAAQ,CAAC,CAAEuB,CAAC,CAAEd,KAAK,EAAI,EAAd,CAAkBe,MAAM,CAAEF,MAAM,CAACE,MAAP,EAAiB,OAA3C,CAAoDC,KAAK,CAAEH,MAAM,CAACG,KAAP,EAAgB,EAA3E,CAAD,CAAT,CAAR,CACD,CAFQ,CAEN,CAAChB,KAAD,CAAQa,MAAM,CAACE,MAAf,CAAuBF,MAAM,CAACG,KAA9B,CAFM,CAAT,CAIA,mBACE,MAAC,QAAD,yBACE,KAAC,OAAD,EACE,KAAK,CAAEN,KADT,CAEE,QAAQ,CAAED,QAFZ,CAGE,QAAQ,CAAElB,QAHZ,CAIE,WAAW,CAAEY,WAJf,CAKE,WAAW,CAAEC,WALf,CAME,aAAa,CAAEI,aANjB,CAOE,cAAc,CAAEH,cAPlB,CAQE,iBAAiB,CAAER,iBARrB,EADF,cAWE,YAAK,SAAS,CAAC,eAAf,uBACE,aAAK,SAAS,CAAC,cAAf,wBACE,YACE,SAAS,CAAET,UAAU,CAAC,sBAAD,CAAyB,CAC5C6B,IAAI,CAAEb,WADsC,CAAzB,CADvB,CAIE,OAAO,CAAE,yBAAMC,eAAc,CAAC,KAAD,CAApB,EAJX,EADF,cAOE,KAAC,KAAD,EACE,KAAK,CAAEK,KADT,CAEE,KAAK,CAAEV,KAFT,CAGE,QAAQ,CAAEC,QAHZ,CAIE,QAAQ,CAAEQ,QAJZ,CAKE,QAAQ,CAAElB,QALZ,CAME,QAAQ,CAAEW,QANZ,CAOE,UAAU,CAAEV,UAPd,CAQE,WAAW,CAAEW,WARf,CASE,WAAW,CAAEV,WATf,CAUE,WAAW,CAAEa,WAVf,CAWE,YAAY,CAAEZ,YAXhB,CAYE,aAAa,CAAEC,aAZjB,CAaE,aAAa,CAAEa,aAbjB,CAcE,cAAc,CAAEH,cAdlB,CAeE,eAAe,CAAET,eAfnB,CAgBE,iBAAiB,CAAEE,iBAhBrB,CAiBE,iBAAiB,CAAED,iBAjBrB,EAPF,GADF,EAXF,GADF,CA2CD,CAjED,CAmEA,cAAeE,SAAf"},"metadata":{},"sourceType":"module"}