{"ast":null,"code":"import _objectSpread from\"/var/www/html/Turia_Client_React/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _classCallCheck from\"/var/www/html/Turia_Client_React/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/var/www/html/Turia_Client_React/node_modules/@babel/runtime/helpers/esm/createClass.js\";import axios from'axios';import jwtDefaultConfig from'./jwtDefaultConfig';var JwtService=/*#__PURE__*/function(){// ** jwtConfig <= Will be used by this service\n// ** For Refreshing Token\n// ** For Refreshing Token\nfunction JwtService(jwtOverrideConfig){var _this=this;_classCallCheck(this,JwtService);this.jwtConfig=_objectSpread({},jwtDefaultConfig);this.isAlreadyFetchingAccessToken=false;this.subscribers=[];this.jwtConfig=_objectSpread(_objectSpread({},this.jwtConfig),jwtOverrideConfig);// ** Request Interceptor\naxios.interceptors.request.use(function(config){// ** Get token from localStorage\nvar accessToken=_this.getToken();// ** If token is present add it to request's Authorization Header\nif(accessToken){// ** eslint-disable-next-line no-param-reassign\nconfig.headers.Authorization=\"\".concat(_this.jwtConfig.tokenType,\" \").concat(accessToken);}return config;},function(error){return Promise.reject(error);});// ** Add request/response interceptor\naxios.interceptors.response.use(function(response){return response;},function(error){// ** const { config, response: { status } } = error\nvar config=error.config,response=error.response;var originalRequest=config;// ** if (status === 401) {\nif(response&&response.status===401){if(!_this.isAlreadyFetchingAccessToken){_this.isAlreadyFetchingAccessToken=true;_this.refreshToken().then(function(r){_this.isAlreadyFetchingAccessToken=false;// ** Update accessToken in localStorage\n_this.setToken(r.data.accessToken);_this.setRefreshToken(r.data.refreshToken);_this.onAccessTokenFetched(r.data.accessToken);});}var retryOriginalRequest=new Promise(function(resolve){_this.addSubscriber(function(accessToken){// ** Make sure to assign accessToken according to your response.\n// ** Check: https://pixinvent.ticksy.com/ticket/2413870\n// ** Change Authorization header\noriginalRequest.headers.Authorization=\"\".concat(_this.jwtConfig.tokenType,\" \").concat(accessToken);resolve(_this.axios(originalRequest));});});return retryOriginalRequest;}return Promise.reject(error);});}_createClass(JwtService,[{key:\"onAccessTokenFetched\",value:function onAccessTokenFetched(accessToken){this.subscribers=this.subscribers.filter(function(callback){return callback(accessToken);});}},{key:\"addSubscriber\",value:function addSubscriber(callback){this.subscribers.push(callback);}},{key:\"getToken\",value:function getToken(){return localStorage.getItem(this.jwtConfig.storageTokenKeyName);}},{key:\"getRefreshToken\",value:function getRefreshToken(){return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName);}},{key:\"setToken\",value:function setToken(value){localStorage.setItem(this.jwtConfig.storageTokenKeyName,value);}},{key:\"setRefreshToken\",value:function setRefreshToken(value){localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName,value);}},{key:\"login\",value:function login(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return axios.post.apply(axios,[this.jwtConfig.loginEndpoint].concat(args));}},{key:\"register\",value:function register(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}return axios.post.apply(axios,[this.jwtConfig.registerEndpoint].concat(args));}},{key:\"refreshToken\",value:function refreshToken(){return axios.post(this.jwtConfig.refreshEndpoint,{refreshToken:this.getRefreshToken()});}}]);return JwtService;}();export{JwtService as default};","map":{"version":3,"names":["axios","jwtDefaultConfig","JwtService","jwtOverrideConfig","jwtConfig","isAlreadyFetchingAccessToken","subscribers","interceptors","request","use","config","accessToken","getToken","headers","Authorization","tokenType","error","Promise","reject","response","originalRequest","status","refreshToken","then","r","setToken","data","setRefreshToken","onAccessTokenFetched","retryOriginalRequest","resolve","addSubscriber","filter","callback","push","localStorage","getItem","storageTokenKeyName","storageRefreshTokenKeyName","value","setItem","args","post","loginEndpoint","registerEndpoint","refreshEndpoint","getRefreshToken"],"sources":["/var/www/html/Turia_Client_React/src/@core/auth/jwt/jwtService.js"],"sourcesContent":["import axios from 'axios'\nimport jwtDefaultConfig from './jwtDefaultConfig'\n\nexport default class JwtService {\n  // ** jwtConfig <= Will be used by this service\n  jwtConfig = { ...jwtDefaultConfig }\n\n  // ** For Refreshing Token\n  isAlreadyFetchingAccessToken = false\n\n  // ** For Refreshing Token\n  subscribers = []\n\n  constructor(jwtOverrideConfig) {\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\n\n    // ** Request Interceptor\n    axios.interceptors.request.use(\n      config => {\n        // ** Get token from localStorage\n        const accessToken = this.getToken()\n\n        // ** If token is present add it to request's Authorization Header\n        if (accessToken) {\n          // ** eslint-disable-next-line no-param-reassign\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n        }\n        return config\n      },\n      error => Promise.reject(error)\n    )\n\n    // ** Add request/response interceptor\n    axios.interceptors.response.use(\n      response => response,\n      error => {\n        // ** const { config, response: { status } } = error\n        const { config, response } = error\n        const originalRequest = config\n\n        // ** if (status === 401) {\n        if (response && response.status === 401) {\n          if (!this.isAlreadyFetchingAccessToken) {\n            this.isAlreadyFetchingAccessToken = true\n            this.refreshToken().then(r => {\n              this.isAlreadyFetchingAccessToken = false\n\n              // ** Update accessToken in localStorage\n              this.setToken(r.data.accessToken)\n              this.setRefreshToken(r.data.refreshToken)\n\n              this.onAccessTokenFetched(r.data.accessToken)\n            })\n          }\n          const retryOriginalRequest = new Promise(resolve => {\n            this.addSubscriber(accessToken => {\n              // ** Make sure to assign accessToken according to your response.\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\n              // ** Change Authorization header\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n              resolve(this.axios(originalRequest))\n            })\n          })\n          return retryOriginalRequest\n        }\n        return Promise.reject(error)\n      }\n    )\n  }\n\n  onAccessTokenFetched(accessToken) {\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\n  }\n\n  addSubscriber(callback) {\n    this.subscribers.push(callback)\n  }\n\n  getToken() {\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\n  }\n\n  setToken(value) {\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\n  }\n\n  setRefreshToken(value) {\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\n  }\n\n  login(...args) {\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\n  }\n\n  register(...args) {\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\n  }\n\n  refreshToken() {\n    return axios.post(this.jwtConfig.refreshEndpoint, {\n      refreshToken: this.getRefreshToken()\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}