{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Turia_Client_React/src/views/pages/account-settings/CreateApikey.js\",\n    _s = $RefreshSig$();\n\n// ** Third Party Components\nimport Select from 'react-select';\nimport { selectThemeColors } from '@utils';\nimport { useForm, Controller } from 'react-hook-form'; // ** Reactstrap Imports\n\nimport { Row, Col, Card, Form, Label, Input, Button, CardBody, CardTitle, CardHeader, FormFeedback } from 'reactstrap'; // ** Images\n\nimport illustration from \"@src/assets/images/illustration/pricing-Illustration.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst keyOptions = [{\n  value: 'full-control',\n  label: 'Full Control'\n}, {\n  value: 'modify',\n  label: 'Modify'\n}, {\n  value: 'read-execute',\n  label: 'Read & Execute'\n}, {\n  value: 'list-folder',\n  label: 'List Folder Contents'\n}, {\n  value: 'read-only',\n  label: 'Read Only'\n}, {\n  value: 'read-write',\n  label: 'Read Write'\n}];\nconst defaultValues = {\n  apiKeyName: ''\n};\n\nconst CreateApiKey = () => {\n  _s();\n\n  // ** Hooks\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues\n  });\n\n  const onSubmit = data => {\n    if (data.apiKeyName.length) {\n      return null;\n    } else {\n      setError('apiKeyName', {\n        type: 'manual'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      className: \"pb-0\",\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Create an API Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          size: 5,\n          order: 0\n        },\n        xs: {\n          size: 12,\n          order: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                className: \"form-label\",\n                children: \"Choose the Api key type you want to create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                isClearable: false,\n                options: keyOptions,\n                className: \"react-select\",\n                classNamePrefix: \"select\",\n                theme: selectThemeColors,\n                defaultValue: keyOptions[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                className: \"form-label\",\n                for: \"api-key-name\",\n                children: \"Name the API key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                id: \"apiKeyName\",\n                name: \"apiKeyName\",\n                control: control,\n                render: _ref => {\n                  let {\n                    field\n                  } = _ref;\n                  return /*#__PURE__*/_jsxDEV(Input, {\n                    placeholder: \"Server Key\",\n                    invalid: errors.apiKeyName && true,\n                    ...field\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), errors && errors.apiKeyName && /*#__PURE__*/_jsxDEV(FormFeedback, {\n                children: \"Please enter a valid API key name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                block: true,\n                type: \"submit\",\n                color: \"primary\",\n                children: \"Create Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          size: 7,\n          order: 1\n        },\n        xs: {\n          size: 12,\n          order: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img-fluid text-center\",\n            src: illustration,\n            alt: \"illustration\",\n            width: \"310\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateApiKey, \"50Wt97U5PCje28EEXIG+E/DXRXA=\", false, function () {\n  return [useForm];\n});\n\n_c = CreateApiKey;\nexport default CreateApiKey;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateApiKey\");","map":{"version":3,"names":["Select","selectThemeColors","useForm","Controller","Row","Col","Card","Form","Label","Input","Button","CardBody","CardTitle","CardHeader","FormFeedback","keyOptions","value","label","defaultValues","apiKeyName","CreateApiKey","control","setError","handleSubmit","formState","errors","onSubmit","data","length","type","size","order","field","illustration"],"sources":["/var/www/html/Turia_Client_React/src/views/pages/account-settings/CreateApikey.js"],"sourcesContent":["// ** Third Party Components\nimport Select from 'react-select'\nimport { selectThemeColors } from '@utils'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, Form, Label, Input, Button, CardBody, CardTitle, CardHeader, FormFeedback } from 'reactstrap'\n\n// ** Images\nimport illustration from '@src/assets/images/illustration/pricing-Illustration.svg'\n\nconst keyOptions = [\n  { value: 'full-control', label: 'Full Control' },\n  { value: 'modify', label: 'Modify' },\n  { value: 'read-execute', label: 'Read & Execute' },\n  { value: 'list-folder', label: 'List Folder Contents' },\n  { value: 'read-only', label: 'Read Only' },\n  { value: 'read-write', label: 'Read Write' }\n]\n\nconst defaultValues = {\n  apiKeyName: ''\n}\n\nconst CreateApiKey = () => {\n  // ** Hooks\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues })\n\n  const onSubmit = data => {\n    if (data.apiKeyName.length) {\n      return null\n    } else {\n      setError('apiKeyName', {\n        type: 'manual'\n      })\n    }\n  }\n\n  return (\n    <Card>\n      <CardHeader className='pb-0'>\n        <CardTitle tag='h4'>Create an API Key</CardTitle>\n      </CardHeader>\n      <Row>\n        <Col md={{ size: 5, order: 0 }} xs={{ size: 12, order: 1 }}>\n          <CardBody>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n              <div className='mb-2'>\n                <Label className='form-label'>Choose the Api key type you want to create</Label>\n                <Select\n                  isClearable={false}\n                  options={keyOptions}\n                  className='react-select'\n                  classNamePrefix='select'\n                  theme={selectThemeColors}\n                  defaultValue={keyOptions[0]}\n                />\n              </div>\n              <div className='mb-2'>\n                <Label className='form-label' for='api-key-name'>\n                  Name the API key\n                </Label>\n                <Controller\n                  id='apiKeyName'\n                  name='apiKeyName'\n                  control={control}\n                  render={({ field }) => (\n                    <Input placeholder='Server Key' invalid={errors.apiKeyName && true} {...field} />\n                  )}\n                />\n                {errors && errors.apiKeyName && <FormFeedback>Please enter a valid API key name</FormFeedback>}\n              </div>\n              <div>\n                <Button block type='submit' color='primary'>\n                  Create Key\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Col>\n        <Col md={{ size: 7, order: 1 }} xs={{ size: 12, order: 0 }}>\n          <div className='text-center'>\n            <img className='img-fluid text-center' src={illustration} alt='illustration' width='310' />\n          </div>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CreateApiKey\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}