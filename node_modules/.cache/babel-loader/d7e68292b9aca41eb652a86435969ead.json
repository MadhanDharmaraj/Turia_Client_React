{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Turia_Client_React/src/views/ui-elements/cards/statistics/ProfitLineChart.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useEffect, useState } from 'react'; // ** Third Party Components\n\nimport axios from 'axios'; // ** Custom Components\n\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfitLineChart = _ref => {\n  _s();\n\n  let {\n    info\n  } = _ref;\n  // ** State\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data));\n    return () => setData(null);\n  }, []);\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [{\n      data: [0, 20, 5, 30, 15, 45]\n    }],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [{\n        seriesIndex: 0,\n        dataPointIndex: 5,\n        fillColor: '#ffffff',\n        strokeColor: info,\n        size: 5\n      }],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  };\n  return data !== null ? /*#__PURE__*/_jsxDEV(TinyChartStats, {\n    height: 70,\n    type: \"line\",\n    options: options,\n    title: data.title,\n    stats: data.statistics,\n    series: data.series\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(ProfitLineChart, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = ProfitLineChart;\nexport default ProfitLineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfitLineChart\");","map":{"version":3,"names":["useEffect","useState","axios","TinyChartStats","ProfitLineChart","info","data","setData","get","then","res","options","chart","toolbar","show","zoom","enabled","grid","borderColor","strokeDashArray","xaxis","lines","yaxis","padding","top","bottom","stroke","width","colors","series","markers","size","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","labels","style","fontSize","axisBorder","axisTicks","tooltip","x","title","statistics"],"sources":["/var/www/html/Turia_Client_React/src/views/ui-elements/cards/statistics/ProfitLineChart.js"],"sourcesContent":["// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst ProfitLineChart = ({ info }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [\n      {\n        data: [0, 20, 5, 30, 15, 45]\n      }\n    ],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [\n        {\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          fillColor: '#ffffff',\n          strokeColor: info,\n          size: 5\n        }\n      ],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='line'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default ProfitLineChart\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}