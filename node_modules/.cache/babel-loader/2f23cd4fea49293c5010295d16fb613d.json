{"ast":null,"code":"// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'; // ** Axios Imports\n\nimport axios from 'axios';\nexport const getMails = createAsyncThunk('appEmail/getMails', async params => {\n  const response = await axios.get('/apps/email/emails', {\n    params\n  });\n  return {\n    params,\n    data: response.data\n  };\n});\nexport const updateMails = createAsyncThunk('appEmail/updateMails', async (_ref, _ref2) => {\n  let {\n    emailIds,\n    dataToUpdate\n  } = _ref;\n  let {\n    dispatch,\n    getState\n  } = _ref2;\n  const response = await axios.post('/apps/email/update-emails', {\n    emailIds,\n    dataToUpdate\n  });\n  await dispatch(getMails(getState().email.params));\n  return {\n    emailIds,\n    dataToUpdate,\n    data: response.data\n  };\n});\nexport const updateMailLabel = createAsyncThunk('appEmail/updateMailLabel', async (_ref3, _ref4) => {\n  let {\n    emailIds,\n    label\n  } = _ref3;\n  let {\n    dispatch,\n    getState\n  } = _ref4;\n  const response = await axios.post('/apps/email/update-emails-label', {\n    emailIds,\n    label\n  });\n  await dispatch(getMails(getState().email.params));\n  return response.data;\n});\nexport const paginateMail = createAsyncThunk('appEmail/paginateMail', async _ref5 => {\n  let {\n    dir,\n    emailId\n  } = _ref5;\n  const response = await axios.get('/apps/email/paginate-email', {\n    params: {\n      dir,\n      emailId\n    }\n  });\n  return response.data;\n});\nexport const selectCurrentMail = createAsyncThunk('appEmail/selectCurrentMail', async id => {\n  const response = await axios.get('/apps/email/get-email', {\n    id\n  });\n  return response.data;\n});\nexport const appEmailSlice = createSlice({\n  name: 'appEmail',\n  initialState: {\n    mails: [],\n    params: {},\n    emailsMeta: {},\n    selectedMails: [],\n    currentMail: null\n  },\n  reducers: {\n    selectMail: (state, action) => {\n      const selectedMails = state.selectedMails;\n\n      if (!selectedMails.includes(action.payload)) {\n        selectedMails.push(action.payload);\n      } else {\n        selectedMails.splice(selectedMails.indexOf(action.payload), 1);\n      }\n\n      state.selectedMails = selectedMails;\n    },\n    selectAllMail: (state, action) => {\n      const selectAllMailsArr = [];\n\n      if (action.payload) {\n        selectAllMailsArr.length = 0;\n        state.mails.forEach(mail => selectAllMailsArr.push(mail.id));\n      } else {\n        selectAllMailsArr.length = 0;\n      }\n\n      state.selectedMails = selectAllMailsArr;\n    },\n    resetSelectedMail: state => {\n      state.selectedMails = [];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getMails.fulfilled, (state, action) => {\n      let currMail = null;\n\n      if (state.currentMail !== null && state.currentMail !== undefined) {\n        currMail = action.payload.data.emails.find(i => i.id === state.currentMail.id);\n      }\n\n      state.currentMail = currMail;\n      state.params = action.payload.params;\n      state.mails = action.payload.data.emails;\n      state.emailsMeta = action.payload.data.emailsMeta;\n    }).addCase(updateMails.fulfilled, (state, action) => {\n      function updateMailData(email) {\n        Object.assign(email, action.payload.dataToUpdate);\n      }\n\n      state.mails.forEach(email => {\n        if (action.payload.emailIds.includes(email.id)) {\n          updateMailData(email);\n        }\n      });\n    }).addCase(paginateMail.fulfilled, (state, action) => {\n      const data = action.payload;\n      const dataIndex = state.mails.findIndex(i => i.id === data.id);\n      dataIndex === 0 ? data.hasPreviousMail = false : data.hasPreviousMail = true;\n      dataIndex === state.mails.length - 1 ? data.hasNextMail = false : data.hasNextMail = true;\n      state.currentMail = data;\n    }).addCase(selectCurrentMail.fulfilled, (state, action) => {\n      state.currentMail = action.payload;\n    });\n  }\n});\nexport const {\n  selectMail,\n  selectAllMail,\n  resetSelectedMail\n} = appEmailSlice.actions;\nexport default appEmailSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","getMails","params","response","get","data","updateMails","emailIds","dataToUpdate","dispatch","getState","post","email","updateMailLabel","label","paginateMail","dir","emailId","selectCurrentMail","id","appEmailSlice","name","initialState","mails","emailsMeta","selectedMails","currentMail","reducers","selectMail","state","action","includes","payload","push","splice","indexOf","selectAllMail","selectAllMailsArr","length","forEach","mail","resetSelectedMail","extraReducers","builder","addCase","fulfilled","currMail","undefined","emails","find","i","updateMailData","Object","assign","dataIndex","findIndex","hasPreviousMail","hasNextMail","actions","reducer"],"sources":["/var/www/html/Turia_Client_React/src/views/apps/email/store/index.js"],"sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from 'axios'\n\nexport const getMails = createAsyncThunk('appEmail/getMails', async params => {\n  const response = await axios.get('/apps/email/emails', { params })\n  return {\n    params,\n    data: response.data\n  }\n})\n\nexport const updateMails = createAsyncThunk(\n  'appEmail/updateMails',\n  async ({ emailIds, dataToUpdate }, { dispatch, getState }) => {\n    const response = await axios.post('/apps/email/update-emails', { emailIds, dataToUpdate })\n    await dispatch(getMails(getState().email.params))\n    return {\n      emailIds,\n      dataToUpdate,\n      data: response.data\n    }\n  }\n)\n\nexport const updateMailLabel = createAsyncThunk(\n  'appEmail/updateMailLabel',\n  async ({ emailIds, label }, { dispatch, getState }) => {\n    const response = await axios.post('/apps/email/update-emails-label', { emailIds, label })\n    await dispatch(getMails(getState().email.params))\n    return response.data\n  }\n)\n\nexport const paginateMail = createAsyncThunk('appEmail/paginateMail', async ({ dir, emailId }) => {\n  const response = await axios.get('/apps/email/paginate-email', { params: { dir, emailId } })\n  return response.data\n})\n\nexport const selectCurrentMail = createAsyncThunk('appEmail/selectCurrentMail', async id => {\n  const response = await axios.get('/apps/email/get-email', { id })\n  return response.data\n})\n\nexport const appEmailSlice = createSlice({\n  name: 'appEmail',\n  initialState: {\n    mails: [],\n    params: {},\n    emailsMeta: {},\n    selectedMails: [],\n    currentMail: null\n  },\n  reducers: {\n    selectMail: (state, action) => {\n      const selectedMails = state.selectedMails\n      if (!selectedMails.includes(action.payload)) {\n        selectedMails.push(action.payload)\n      } else {\n        selectedMails.splice(selectedMails.indexOf(action.payload), 1)\n      }\n      state.selectedMails = selectedMails\n    },\n    selectAllMail: (state, action) => {\n      const selectAllMailsArr = []\n      if (action.payload) {\n        selectAllMailsArr.length = 0\n        state.mails.forEach(mail => selectAllMailsArr.push(mail.id))\n      } else {\n        selectAllMailsArr.length = 0\n      }\n      state.selectedMails = selectAllMailsArr\n    },\n    resetSelectedMail: state => {\n      state.selectedMails = []\n    }\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(getMails.fulfilled, (state, action) => {\n        let currMail = null\n        if (state.currentMail !== null && state.currentMail !== undefined) {\n          currMail = action.payload.data.emails.find(i => i.id === state.currentMail.id)\n        }\n        state.currentMail = currMail\n        state.params = action.payload.params\n        state.mails = action.payload.data.emails\n        state.emailsMeta = action.payload.data.emailsMeta\n      })\n      .addCase(updateMails.fulfilled, (state, action) => {\n        function updateMailData(email) {\n          Object.assign(email, action.payload.dataToUpdate)\n        }\n        state.mails.forEach(email => {\n          if (action.payload.emailIds.includes(email.id)) {\n            updateMailData(email)\n          }\n        })\n      })\n      .addCase(paginateMail.fulfilled, (state, action) => {\n        const data = action.payload\n        const dataIndex = state.mails.findIndex(i => i.id === data.id)\n        dataIndex === 0 ? (data.hasPreviousMail = false) : (data.hasPreviousMail = true)\n        dataIndex === state.mails.length - 1 ? (data.hasNextMail = false) : (data.hasNextMail = true)\n        state.currentMail = data\n      })\n      .addCase(selectCurrentMail.fulfilled, (state, action) => {\n        state.currentMail = action.payload\n      })\n  }\n})\n\nexport const { selectMail, selectAllMail, resetSelectedMail } = appEmailSlice.actions\n\nexport default appEmailSlice.reducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}