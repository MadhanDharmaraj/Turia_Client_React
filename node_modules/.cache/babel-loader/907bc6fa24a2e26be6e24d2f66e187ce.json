{"ast":null,"code":"import _objectSpread from\"/var/www/html/Turia_Client_React/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import mock from'../mock';import jwt from'jsonwebtoken';var data={users:[{id:1,fullName:'John Doe',username:'johndoe',password:'admin',avatar:require('@src/assets/images/portrait/small/avatar-s-11.jpg').default,email:'admin@demo.com',role:'admin',ability:[{action:'manage',subject:'all'}],extras:{eCommerceCartItemsCount:5}},{id:2,fullName:'Jane Doe',username:'janedoe',password:'client',avatar:require('@src/assets/images/avatars/1-small.png').default,email:'client@demo.com',role:'client',ability:[{action:'read',subject:'ACL'},{action:'read',subject:'Auth'}],extras:{eCommerceCartItemsCount:5}}]};// ! These two secrets shall be in .env file and not in any other file\nvar jwtConfig={secret:'dd5f3089-40c3-403d-af14-d0c228b05cb4',refreshTokenSecret:'7c4c1c50-3230-45bf-9eae-c9b2e401c767',expireTime:'10m',refreshTokenExpireTime:'10m'};mock.onPost('/jwt/login').reply(function(request){var _JSON$parse=JSON.parse(request.data),email=_JSON$parse.email,password=_JSON$parse.password;var error={email:['Something went wrong']};var user=data.users.find(function(u){return u.email===email&&u.password===password;});if(user){try{var accessToken=jwt.sign({id:user.id},jwtConfig.secret,{expiresIn:jwtConfig.expireTime});var refreshToken=jwt.sign({id:user.id},jwtConfig.refreshTokenSecret,{expiresIn:jwtConfig.refreshTokenExpireTime});var userData=_objectSpread({},user);delete userData.password;var response={userData:userData,accessToken:accessToken,refreshToken:refreshToken};return[200,response];}catch(e){error=e;}}else{error={email:['Email or Password is Invalid']};}return[400,{error:error}];});mock.onPost('/jwt/register').reply(function(request){if(request.data.length>0){var _JSON$parse2=JSON.parse(request.data),email=_JSON$parse2.email,password=_JSON$parse2.password,username=_JSON$parse2.username;var isEmailAlreadyInUse=data.users.find(function(user){return user.email===email;});var isUsernameAlreadyInUse=data.users.find(function(user){return user.username===username;});var error={email:isEmailAlreadyInUse?'This email is already in use.':null,username:isUsernameAlreadyInUse?'This username is already in use.':null};if(!error.username&&!error.email){var userData={email:email,password:password,username:username,fullName:'',avatar:null,role:'admin',ability:[{action:'manage',subject:'all'}]};// Add user id\nvar length=data.users.length;var lastIndex=0;if(length){lastIndex=data.users[length-1].id;}userData.id=lastIndex+1;data.users.push(userData);var accessToken=jwt.sign({id:userData.id},jwtConfig.secret,{expiresIn:jwtConfig.expireTime});var user=Object.assign({},userData);delete user['password'];var response={user:user,accessToken:accessToken};return[200,response];}else{return[200,{error:error}];}}});mock.onPost('/jwt/refresh-token').reply(function(request){var _JSON$parse3=JSON.parse(request.data),refreshToken=_JSON$parse3.refreshToken;try{var _jwt$verify=jwt.verify(refreshToken,jwtConfig.refreshTokenSecret),id=_jwt$verify.id;var userData=_objectSpread({},data.users.find(function(user){return user.id===id;}));var newAccessToken=jwt.sign({id:userData.id},jwtConfig.secret,{expiresIn:jwtConfig.expiresIn});var newRefreshToken=jwt.sign({id:userData.id},jwtConfig.refreshTokenSecret,{expiresIn:jwtConfig.refreshTokenExpireTime});delete userData.password;var response={userData:userData,accessToken:newAccessToken,refreshToken:newRefreshToken};return[200,response];}catch(e){var error='Invalid refresh token';return[401,{error:error}];}});","map":{"version":3,"names":["mock","jwt","data","users","id","fullName","username","password","avatar","require","default","email","role","ability","action","subject","extras","eCommerceCartItemsCount","jwtConfig","secret","refreshTokenSecret","expireTime","refreshTokenExpireTime","onPost","reply","request","JSON","parse","error","user","find","u","accessToken","sign","expiresIn","refreshToken","userData","response","e","length","isEmailAlreadyInUse","isUsernameAlreadyInUse","lastIndex","push","Object","assign","verify","newAccessToken","newRefreshToken"],"sources":["/var/www/html/Turia_Client_React/src/@fake-db/jwt/index.js"],"sourcesContent":["import mock from '../mock'\nimport jwt from 'jsonwebtoken'\n\nconst data = {\n  users: [\n    {\n      id: 1,\n      fullName: 'John Doe',\n      username: 'johndoe',\n      password: 'admin',\n      avatar: require('@src/assets/images/portrait/small/avatar-s-11.jpg').default,\n      email: 'admin@demo.com',\n      role: 'admin',\n      ability: [\n        {\n          action: 'manage',\n          subject: 'all'\n        }\n      ],\n      extras: {\n        eCommerceCartItemsCount: 5\n      }\n    },\n    {\n      id: 2,\n      fullName: 'Jane Doe',\n      username: 'janedoe',\n      password: 'client',\n      avatar: require('@src/assets/images/avatars/1-small.png').default,\n      email: 'client@demo.com',\n      role: 'client',\n      ability: [\n        {\n          action: 'read',\n          subject: 'ACL'\n        },\n        {\n          action: 'read',\n          subject: 'Auth'\n        }\n      ],\n      extras: {\n        eCommerceCartItemsCount: 5\n      }\n    }\n  ]\n}\n\n// ! These two secrets shall be in .env file and not in any other file\nconst jwtConfig = {\n  secret: 'dd5f3089-40c3-403d-af14-d0c228b05cb4',\n  refreshTokenSecret: '7c4c1c50-3230-45bf-9eae-c9b2e401c767',\n  expireTime: '10m',\n  refreshTokenExpireTime: '10m'\n}\n\nmock.onPost('/jwt/login').reply(request => {\n  const { email, password } = JSON.parse(request.data)\n\n  let error = {\n    email: ['Something went wrong']\n  }\n\n  const user = data.users.find(u => u.email === email && u.password === password)\n\n  if (user) {\n    try {\n      const accessToken = jwt.sign({ id: user.id }, jwtConfig.secret, { expiresIn: jwtConfig.expireTime })\n      const refreshToken = jwt.sign({ id: user.id }, jwtConfig.refreshTokenSecret, {\n        expiresIn: jwtConfig.refreshTokenExpireTime\n      })\n\n      const userData = { ...user }\n\n      delete userData.password\n\n      const response = {\n        userData,\n        accessToken,\n        refreshToken\n      }\n\n      return [200, response]\n    } catch (e) {\n      error = e\n    }\n  } else {\n    error = {\n      email: ['Email or Password is Invalid']\n    }\n  }\n\n  return [400, { error }]\n})\n\nmock.onPost('/jwt/register').reply(request => {\n  if (request.data.length > 0) {\n    const { email, password, username } = JSON.parse(request.data)\n    const isEmailAlreadyInUse = data.users.find(user => user.email === email)\n    const isUsernameAlreadyInUse = data.users.find(user => user.username === username)\n    const error = {\n      email: isEmailAlreadyInUse ? 'This email is already in use.' : null,\n      username: isUsernameAlreadyInUse ? 'This username is already in use.' : null\n    }\n\n    if (!error.username && !error.email) {\n      const userData = {\n        email,\n        password,\n        username,\n        fullName: '',\n        avatar: null,\n        role: 'admin',\n        ability: [\n          {\n            action: 'manage',\n            subject: 'all'\n          }\n        ]\n      }\n\n      // Add user id\n      const length = data.users.length\n      let lastIndex = 0\n      if (length) {\n        lastIndex = data.users[length - 1].id\n      }\n      userData.id = lastIndex + 1\n\n      data.users.push(userData)\n\n      const accessToken = jwt.sign({ id: userData.id }, jwtConfig.secret, { expiresIn: jwtConfig.expireTime })\n\n      const user = Object.assign({}, userData)\n      delete user['password']\n      const response = { user, accessToken }\n\n      return [200, response]\n    } else {\n      return [200, { error }]\n    }\n  }\n})\n\nmock.onPost('/jwt/refresh-token').reply(request => {\n  const { refreshToken } = JSON.parse(request.data)\n\n  try {\n    const { id } = jwt.verify(refreshToken, jwtConfig.refreshTokenSecret)\n\n    const userData = { ...data.users.find(user => user.id === id) }\n\n    const newAccessToken = jwt.sign({ id: userData.id }, jwtConfig.secret, { expiresIn: jwtConfig.expiresIn })\n    const newRefreshToken = jwt.sign({ id: userData.id }, jwtConfig.refreshTokenSecret, {\n      expiresIn: jwtConfig.refreshTokenExpireTime\n    })\n\n    delete userData.password\n    const response = {\n      userData,\n      accessToken: newAccessToken,\n      refreshToken: newRefreshToken\n    }\n\n    return [200, response]\n  } catch (e) {\n    const error = 'Invalid refresh token'\n    return [401, { error }]\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}