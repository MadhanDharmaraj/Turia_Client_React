{"ast":null,"code":"// ** Returns paginated array\nexport const paginateArray = (array, perPage, page) => array.slice((page - 1) * perPage, page * perPage); // ** Returns sorted array\n\nexport const sortCompare = key => (a, b) => {\n  const fieldA = a[key];\n  const fieldB = b[key];\n  let comparison = 0;\n\n  if (fieldA > fieldB) {\n    comparison = 1;\n  } else if (fieldA < fieldB) {\n    comparison = -1;\n  }\n\n  return comparison;\n}; // ** Returns number range\n\nexport const getRandomInt = (min, max) => {\n  if (min > max) {\n    const temp = max;\n    /* eslint-disable no-param-reassign */\n\n    max = min;\n    min = temp;\n    /* eslint-enable */\n  }\n\n  if (min <= 0) {\n    return Math.floor(Math.random() * (max + Math.abs(min) + 1)) + min;\n  }\n\n  return Math.floor(Math.random() * max) + min;\n}; // ** Returns random date\n\nexport const randomDate = (start, end) => {\n  const diff = end.getTime() - start.getTime();\n  const newDiff = diff * Math.random();\n  const date = new Date(start.getTime() + newDiff);\n  return date;\n};","map":{"version":3,"names":["paginateArray","array","perPage","page","slice","sortCompare","key","a","b","fieldA","fieldB","comparison","getRandomInt","min","max","temp","Math","floor","random","abs","randomDate","start","end","diff","getTime","newDiff","date","Date"],"sources":["/home/hp/Documents/Test/full-version/src/@fake-db/utils.js"],"sourcesContent":["// ** Returns paginated array\nexport const paginateArray = (array, perPage, page) => array.slice((page - 1) * perPage, page * perPage)\n\n// ** Returns sorted array\nexport const sortCompare = key => (a, b) => {\n  const fieldA = a[key]\n  const fieldB = b[key]\n\n  let comparison = 0\n  if (fieldA > fieldB) {\n    comparison = 1\n  } else if (fieldA < fieldB) {\n    comparison = -1\n  }\n  return comparison\n}\n\n// ** Returns number range\nexport const getRandomInt = (min, max) => {\n  if (min > max) {\n    const temp = max\n    /* eslint-disable no-param-reassign */\n    max = min\n    min = temp\n    /* eslint-enable */\n  }\n\n  if (min <= 0) {\n    return Math.floor(Math.random() * (max + Math.abs(min) + 1)) + min\n  }\n  return Math.floor(Math.random() * max) + min\n}\n\n// ** Returns random date\nexport const randomDate = (start, end) => {\n  const diff = end.getTime() - start.getTime()\n  const newDiff = diff * Math.random()\n  const date = new Date(start.getTime() + newDiff)\n  return date\n}\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAQC,OAAR,EAAiBC,IAAjB,KAA0BF,KAAK,CAACG,KAAN,CAAY,CAACD,IAAI,GAAG,CAAR,IAAaD,OAAzB,EAAkCC,IAAI,GAAGD,OAAzC,CAAhD,C,CAEP;;AACA,OAAO,MAAMG,WAAW,GAAGC,GAAG,IAAI,CAACC,CAAD,EAAIC,CAAJ,KAAU;EAC1C,MAAMC,MAAM,GAAGF,CAAC,CAACD,GAAD,CAAhB;EACA,MAAMI,MAAM,GAAGF,CAAC,CAACF,GAAD,CAAhB;EAEA,IAAIK,UAAU,GAAG,CAAjB;;EACA,IAAIF,MAAM,GAAGC,MAAb,EAAqB;IACnBC,UAAU,GAAG,CAAb;EACD,CAFD,MAEO,IAAIF,MAAM,GAAGC,MAAb,EAAqB;IAC1BC,UAAU,GAAG,CAAC,CAAd;EACD;;EACD,OAAOA,UAAP;AACD,CAXM,C,CAaP;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;EACxC,IAAID,GAAG,GAAGC,GAAV,EAAe;IACb,MAAMC,IAAI,GAAGD,GAAb;IACA;;IACAA,GAAG,GAAGD,GAAN;IACAA,GAAG,GAAGE,IAAN;IACA;EACD;;EAED,IAAIF,GAAG,IAAI,CAAX,EAAc;IACZ,OAAOG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,GAAG,GAAGE,IAAI,CAACG,GAAL,CAASN,GAAT,CAAN,GAAsB,CAAvC,CAAX,IAAwDA,GAA/D;EACD;;EACD,OAAOG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,GAA3B,IAAkCD,GAAzC;AACD,CAbM,C,CAeP;;AACA,OAAO,MAAMO,UAAU,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;EACxC,MAAMC,IAAI,GAAGD,GAAG,CAACE,OAAJ,KAAgBH,KAAK,CAACG,OAAN,EAA7B;EACA,MAAMC,OAAO,GAAGF,IAAI,GAAGP,IAAI,CAACE,MAAL,EAAvB;EACA,MAAMQ,IAAI,GAAG,IAAIC,IAAJ,CAASN,KAAK,CAACG,OAAN,KAAkBC,OAA3B,CAAb;EACA,OAAOC,IAAP;AACD,CALM"},"metadata":{},"sourceType":"module"}