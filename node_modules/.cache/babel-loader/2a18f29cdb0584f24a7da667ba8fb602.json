{"ast":null,"code":"var _s = $RefreshSig$();\n\n//** React Imports\n// import { useEffect, useCallback } from 'react'\n// ** Store Imports\nimport { useDispatch, useSelector } from 'react-redux';\nimport { handleLayout, handleLastLayout } from '@store/layout';\nexport const useLayout = () => {\n  _s();\n\n  // ** Hooks\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.layout);\n\n  const setLayout = value => {\n    dispatch(handleLayout(value));\n  };\n\n  const setLastLayout = value => {\n    dispatch(handleLastLayout(value));\n  }; // const handleLayoutUpdate = useCallback(() => {\n  //   // ** If layout is horizontal & screen size is equals to or below 1200\n  //   if (store.layout === 'horizontal' && window.innerWidth <= 1200) {\n  //     setLayout('vertical')\n  //     setLastLayout('horizontal')\n  //   }\n  //   // ** If lastLayout is horizontal & screen size is equals to or above 1200\n  //   if (store.lastLayout === 'horizontal' && window.innerWidth >= 1200) {\n  //     setLayout('horizontal')\n  //   }\n  // }, [])\n  // // ** ComponentDidMount\n  // useEffect(() => {\n  //   handleLayoutUpdate()\n  // }, [])\n  // useEffect(() => {\n  //   // ** Window Resize Event\n  //   window.addEventListener('resize', handleLayoutUpdate)\n  // }, [store.layout, store.lastLayout])\n\n\n  if (window) {\n    const breakpoint = 1200;\n\n    if (window.innerWidth < breakpoint) {\n      setLayout('vertical');\n    }\n\n    window.addEventListener('resize', () => {\n      if (window.innerWidth <= breakpoint && store.lastLayout !== 'vertical' && store.layout !== 'vertical') {\n        setLayout('vertical');\n      }\n\n      if (window.innerWidth >= breakpoint && store.lastLayout !== store.layout) {\n        setLayout(store.lastLayout);\n      }\n    });\n  }\n\n  return {\n    layout: store.layout,\n    setLayout,\n    lastLayout: store.lastLayout,\n    setLastLayout\n  };\n};\n\n_s(useLayout, \"zw25nIk3XDUGgPuAbVy/YKvKJS8=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"names":["useDispatch","useSelector","handleLayout","handleLastLayout","useLayout","dispatch","store","state","layout","setLayout","value","setLastLayout","window","breakpoint","innerWidth","addEventListener","lastLayout"],"sources":["/var/www/html/Turia_Client_React/src/utility/hooks/useLayout.js"],"sourcesContent":["//** React Imports\n// import { useEffect, useCallback } from 'react'\n\n// ** Store Imports\nimport { useDispatch, useSelector } from 'react-redux'\nimport { handleLayout, handleLastLayout } from '@store/layout'\n\nexport const useLayout = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setLayout = value => {\n    dispatch(handleLayout(value))\n  }\n\n  const setLastLayout = value => {\n    dispatch(handleLastLayout(value))\n  }\n\n  // const handleLayoutUpdate = useCallback(() => {\n  //   // ** If layout is horizontal & screen size is equals to or below 1200\n  //   if (store.layout === 'horizontal' && window.innerWidth <= 1200) {\n  //     setLayout('vertical')\n  //     setLastLayout('horizontal')\n  //   }\n  //   // ** If lastLayout is horizontal & screen size is equals to or above 1200\n  //   if (store.lastLayout === 'horizontal' && window.innerWidth >= 1200) {\n  //     setLayout('horizontal')\n  //   }\n  // }, [])\n\n  // // ** ComponentDidMount\n  // useEffect(() => {\n  //   handleLayoutUpdate()\n  // }, [])\n\n  // useEffect(() => {\n  //   // ** Window Resize Event\n  //   window.addEventListener('resize', handleLayoutUpdate)\n  // }, [store.layout, store.lastLayout])\n\n  if (window) {\n    const breakpoint = 1200\n\n    if (window.innerWidth < breakpoint) {\n      setLayout('vertical')\n    }\n\n    window.addEventListener('resize', () => {\n      if (window.innerWidth <= breakpoint && store.lastLayout !== 'vertical' && store.layout !== 'vertical') {\n        setLayout('vertical')\n      }\n      if (window.innerWidth >= breakpoint && store.lastLayout !== store.layout) {\n        setLayout(store.lastLayout)\n      }\n    })\n  }\n\n  return { layout: store.layout, setLayout, lastLayout: store.lastLayout, setLastLayout }\n}\n"],"mappings":";;AAAA;AACA;AAEA;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,eAA/C;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC7B;EACA,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAMM,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAAzB;;EAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;IACzBL,QAAQ,CAACH,YAAY,CAACQ,KAAD,CAAb,CAAR;EACD,CAFD;;EAIA,MAAMC,aAAa,GAAGD,KAAK,IAAI;IAC7BL,QAAQ,CAACF,gBAAgB,CAACO,KAAD,CAAjB,CAAR;EACD,CAFD,CAT6B,CAa7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;;EAEA,IAAIE,MAAJ,EAAY;IACV,MAAMC,UAAU,GAAG,IAAnB;;IAEA,IAAID,MAAM,CAACE,UAAP,GAAoBD,UAAxB,EAAoC;MAClCJ,SAAS,CAAC,UAAD,CAAT;IACD;;IAEDG,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;MACtC,IAAIH,MAAM,CAACE,UAAP,IAAqBD,UAArB,IAAmCP,KAAK,CAACU,UAAN,KAAqB,UAAxD,IAAsEV,KAAK,CAACE,MAAN,KAAiB,UAA3F,EAAuG;QACrGC,SAAS,CAAC,UAAD,CAAT;MACD;;MACD,IAAIG,MAAM,CAACE,UAAP,IAAqBD,UAArB,IAAmCP,KAAK,CAACU,UAAN,KAAqBV,KAAK,CAACE,MAAlE,EAA0E;QACxEC,SAAS,CAACH,KAAK,CAACU,UAAP,CAAT;MACD;IACF,CAPD;EAQD;;EAED,OAAO;IAAER,MAAM,EAAEF,KAAK,CAACE,MAAhB;IAAwBC,SAAxB;IAAmCO,UAAU,EAAEV,KAAK,CAACU,UAArD;IAAiEL;EAAjE,CAAP;AACD,CArDM;;GAAMP,S;UAEMJ,W,EACHC,W"},"metadata":{},"sourceType":"module"}